[{"path":"https://cobriniklab.github.io/seuFLViz/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2019 Kevin Stachelek Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/articles/integration.html","id":"tldr","dir":"Articles","previous_headings":"","what":"TLDR","title":"Integration of Seurat objects","text":", using panc8 dataset, produced two batches using different technologies. SplitObject() function splits seurat object list containing batch element. list seurat objects can integrated using integration_workflow() function, identifies shared cell states present across different single cell datasets.","code":"batches <-     human_gene_transcript_seu[, !is.na(human_gene_transcript_seu$Prep.Method)] %>%     Seurat::SplitObject(split.by = \"Prep.Method\") %>%     identity()  integrated_seu <- integration_workflow(batches)"},{"path":"https://cobriniklab.github.io/seuFLViz/articles/integration.html","id":"batch-effects-are-problematic","dir":"Articles","previous_headings":"","what":"Batch effects are problematic","title":"Integration of Seurat objects","text":"analyzing data across multiple batches, batch effects can become problematic compromise integration interpretation data. instance, dataset human_gene_transcript_seu contains data obtained following two different preparation method. data analyzed without integration notice Zhong method cluster 2 barely represented. plot marker features know cluster 2 high expression features associated cones. absence cluster 2 Zhong method can become problematic downstream analysis","code":"markerp <- plot_markers(human_gene_transcript_seu, metavar = \"gene_snn_res.0.2\", num_markers = 10) dp <- DimPlot(human_gene_transcript_seu, group.by = \"gene_snn_res.0.2\", split.by = \"Prep.Method\")  wrap_plots(markerp, dp) +     plot_layout(widths = c(1, 6), ncol = 1)"},{"path":"https://cobriniklab.github.io/seuFLViz/articles/integration.html","id":"integrate-within-species","dir":"Articles","previous_headings":"Batch effects are problematic","what":"Integrate within species","title":"Integration of Seurat objects","text":"integration_workflow() function can integrate datasets obtained mouse human source. integrating datasets obtained species, data processed according standard integration workflow.","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/articles/integration.html","id":"integrate-accross-species","dir":"Articles","previous_headings":"Batch effects are problematic","what":"Integrate accross species","title":"Integration of Seurat objects","text":"integration_workflow() can also used integrate datasets collected different species, .e., human mouse. case, sub-function cross_species_integrate() first converts mouse seurat objects human transforming features mouse dataset human specific features integrates two objects using standard integration workflow.","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/articles/integration.html","id":"steps-of-integration","dir":"Articles","previous_headings":"Batch effects are problematic","what":"Steps of integration","title":"Integration of Seurat objects","text":"standard integration procedure integration_workflow() includes multiple sub-functions responsible performing different steps integration. Prior integration, seurat_preprocess performs standard preprocessing (log-normalization) identifies variable features individually element list. , anchors identified individual datasets using FindIntegrationAnchors used IntegrateDatato return Seurat object containing new Assay, holds integrated expression matrix cells. Downstream analysis performed integrated matrix seurat_integration_pipeline sub-function scales integrated data, reduces dimensions seurat object, performs clustering different resolutions identifies marker genes. Finally, resulting integrated datasets can visualized plotting output","code":"DimPlot(integrated_seu, reduction = \"umap\", group.by = \"Prep.Method\", )"},{"path":[]},{"path":"https://cobriniklab.github.io/seuFLViz/articles/preprocessing.html","id":"tldr","dir":"Articles","previous_headings":"","what":"TLDR","title":"Preprocessing","text":"seuFLViz provides single command : construct Seurat object filter genes minimum expression ubiquity normalize scale expression several methods packaged Seurat","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/articles/preprocessing.html","id":"run-clustering-on-a-single-seurat-object","dir":"Articles","previous_headings":"","what":"Run clustering on a single seurat object","title":"Preprocessing","text":"default clustering run ten different resolutions 0.2 2.0. resolution can specified providing resolution argument numeric vector.","code":"clustered_seu <- clustering_workflow(human_gene_transcript_seu,     experiment_name = \"seurat_hu_trans\",     organism = \"human\" )"},{"path":[]},{"path":"https://cobriniklab.github.io/seuFLViz/articles/preprocessing.html","id":"get-a-first-look-at-a-processed-dataset-using-an-interactive-shiny-app","dir":"Articles","previous_headings":"","what":"Get a first look at a processed dataset using an interactive shiny app","title":"Preprocessing","text":"","code":"minimalSeuratApp(clustered_seu)"},{"path":"https://cobriniklab.github.io/seuFLViz/articles/preprocessing.html","id":"set-up-a-seurat-object","dir":"Articles","previous_headings":"","what":"Set up a seurat object","title":"Preprocessing","text":"start gene cell matrix count/UMI values table cell metadata using 2 datasets can create Seurat object usual manner using CreateSeuratObject function","code":"human_count[1:5, 1:5]  head(human_meta) myseu <- CreateSeuratObject(human_count, assay = \"gene\", meta.data = human_meta) myseu #> An object of class Seurat  #> 9740 features across 938 samples within 1 assay  #> Active assay: gene (9740 features, 0 variable features) #>  1 layer present: counts"},{"path":"https://cobriniklab.github.io/seuFLViz/articles/preprocessing.html","id":"preprocess-the-seurat-object","dir":"Articles","previous_headings":"","what":"Preprocess the seurat object","title":"Preprocessing","text":"seuFLViz includes handy function preprocess data handles normalization scaling required downstream analysis. Preprocessing performed using existing Seurat functions. needed, parameters can specified user. single function includes sub-functions normalizes, identifies highly variable features scales data: normalizing sub-function performs log normalization using default scale factor 10,000. normalization, subset features exhibit high cell--cell variation dataset identified. default, 2,000 features per dataset returned function. Finally, data scaled applying linear transformation. step shifts gene expression, mean expression across cells 0 scales gene expression, variance across cells 1.","code":"myseu <- seurat_preprocess(myseu) preprocess_seu <- NormalizeData(myseu, verbose = FALSE) preprocess_seu <- FindVariableFeatures(preprocess_seu,     selection.method = \"vst\",     verbose = FALSE ) pre_process_seu <- ScaleData(preprocess_seu)"},{"path":"https://cobriniklab.github.io/seuFLViz/articles/preprocessing.html","id":"perform-dimension-reduction","dir":"Articles","previous_headings":"","what":"Perform dimension reduction","title":"Preprocessing","text":"seuFLViz also implements standardized dimension reduction step select variable features user-specified threshold perform PCA, tSNE, UMAP. default assay dimension reduction run “gene”.  function includes existing seurat functions performs dimension reduction techniques. Perform PCA: Runs PCA dimensionality reduction. Perform UMAP: Runs Uniform Manifold Approximation Projection (UMAP) dimensional reduction technique.","code":"myseu <- seurat_reduce_dimensions(myseu, assay = \"RNA\") DimPlot(myseu) Dim_Red_seu <- RunPCA(myseu,     features = VariableFeatures(myseu),     do.print = FALSE ) Dim_Red_seu <- RunUMAP(Dim_Red_seu, dims = 1:30)"},{"path":"https://cobriniklab.github.io/seuFLViz/articles/preprocessing.html","id":"community-detection-by-clustering","dir":"Articles","previous_headings":"","what":"Community detection by clustering","title":"Preprocessing","text":"Clustering analysis performed via Louvain(default) alternative algorithms available Seurat. Clustering performed range resolutions default value ranging 0.2 2 pca reduction function produces clustering analysis via two steps performed using two different sub-functions FindNeighbours: function computes nearest neighbors given dataset using k-nearest neighbor algorithm. FindClusters: output FindNeighbours used identify clusters cells based clustering algorithm.","code":"seu <- seurat_cluster(seu = Dim_Red_seu, resolution = seq(0.2, 2, by = 0.2))"},{"path":"https://cobriniklab.github.io/seuFLViz/articles/shiny_app.html","id":"reformat-metadata","dir":"Articles","previous_headings":"","what":"Reformat Metadata","title":"Shiny App","text":"Arbitrary variables can appended cell metadata based results exploratory data analysis.  Metadata addition can executed uploading csv row names matching cell ids new variables columns. Metadata editing can also accomplished using built-spreadsheet tool.","code":""},{"path":[]},{"path":"https://cobriniklab.github.io/seuFLViz/articles/shiny_app.html","id":"dimensional-reduction-plots","dir":"Articles","previous_headings":"Plot Data","what":"Dimensional reduction plots","title":"Shiny App","text":"seuFLViz provides visualization embeddings PCA, tSNE, UMAP scRNAseq data summarized gene transcript level. Plots can customized display cell metadata results community detection clustering Louvain Leiden algorithms implemented Seurat. addition, gene transcript feature expression can overlaid embedding plots gene transcript level.","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/articles/shiny_app.html","id":"readumi-count-histograms","dir":"Articles","previous_headings":"Plot Data","what":"read/UMI count histograms","title":"Shiny App","text":"facilitate quality control, cell-level summarized umi read count values can also overlaid cell metadata clustering results.","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/articles/shiny_app.html","id":"clustering-trees","dir":"Articles","previous_headings":"Plot Data","what":"Clustering trees","title":"Shiny App","text":"cluster tree cell identities displayed using scclustviz. plot can used help establish optimal clustering resolution.","code":""},{"path":[]},{"path":"https://cobriniklab.github.io/seuFLViz/articles/shiny_app.html","id":"heat-maps","dir":"Articles","previous_headings":"Heat Maps/Violin Plots","what":"Heat Maps","title":"Shiny App","text":"plotting heat map, gene/transcript expression values cell normalized cell’s total expression multiplied 10,000 natural-log transformed plotting. Clustering model metadata column arrangement taken parameter produce complex heat map. default, 50 highly variable genes displayed. However, arbitrary lists genes can plotted comparison. genes/transcripts displayed order listed.","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/articles/shiny_app.html","id":"violin-plots","dir":"Articles","previous_headings":"Heat Maps/Violin Plots","what":"Violin Plots","title":"Shiny App","text":"Feature (gene transcript) expression can viewed violin plot based sample metadata Violin plots hybrid density box plots. shows probability density data different values providing visual representation distribution expression level feature different groups cell. horizontal line marker median data box shows interquartile ranges. parameters chosen : 1. ‘Grouping variable’ 2. ‘Data Type (Transformed/Raw)’","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/articles/shiny_app.html","id":"differential-expression","dir":"Articles","previous_headings":"","what":"Differential expression","title":"Shiny App","text":"seuFLViz provides different methods differential expression analysis users can choose determine differential expression gene. DE methods included seuFLViz t-test, Wilcoxon rank-sum test, Likelihood ratio test, MAST Running DE testing results data frame containing following information: * p_val : Unadjusted p-value * avg_log2FC : log fold-change average expression two groups. * pct.1 : percentage cells feature detected first group * pct.2 : percentage cells feature detected second group * p_val_adj : Adjusted p-value, based bonferroni correction using features dataset.","code":"d1 <- read.csv(\"Dominic.csv\", header = TRUE)"},{"path":"https://cobriniklab.github.io/seuFLViz/articles/shiny_app.html","id":"find-markers","dir":"Articles","previous_headings":"","what":"Find Markers","title":"Shiny App","text":"Marker features based louvain/leiden cluster identities cell metadata can defined based results wilcoxon rank-sum test via presto measures cluster specificity genesorteR (Ibrahim, 2020) . Variable numbers marker genes per cell group can specified based adjusted p value thresholded log fold change.","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/articles/shiny_app.html","id":"subset-seurat-input","dir":"Articles","previous_headings":"","what":"Subset Seurat Input","title":"Shiny App","text":"often useful subset single cell data set based cell metadata whether experimentally determined (age, collection method, etc.) derived analysis (quality control metrics, annotated cell type) seuFLViz makes simple subset dataset consisting single batch batch-integrated dataset. Subsetting can accomplished either graphical setting lasso-selection dimensionally reduced plot specification formatted .csv file. Subsetting single batch integrated data trigger renewal relevant preprocessing steps including dimensional reduction, clustering, marker gene, pathway enrichment well integration based ‘batch’ variable","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/articles/shiny_app.html","id":"all-transcripts","dir":"Articles","previous_headings":"","what":"All Transcripts","title":"Shiny App","text":"expression summarized gene transcript assays, possible plot constituent transcripts (labeled ensembl transcript ids) making given gene. two parameters must chosen : dimensional reduction method: PCA, UMAP tSNE name gene interest  Direct comparison contribution individual transcripts can achieved using stacked bar plots answer question: contribution transcript make gene expression?","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/articles/shiny_app.html","id":"pseudotime-analysis-by-monocle-3","dir":"Articles","previous_headings":"","what":"Pseudotime Analysis by Monocle 3","title":"Shiny App","text":"Pseudotime analysis broken several steps, mirroring typical command-line workflow. 1. Users can subset embedded dataset calculate trajectory graph. 1. Root cells can specified cells ordered pseudotime monocle3. 2. Features vary significantly pseudotime based autocorrelation can determined grouped modules vary similarly pseudotime.  Heat maps scatter plots available gene module levels.","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/articles/shiny_app.html","id":"regress-features","dir":"Articles","previous_headings":"","what":"Regress Features","title":"Shiny App","text":"correct expression variation analysis due phenomena unrelated focus study, rather excluding count values attributable process, can adjust expression remaining genes transcripts cell based sum score relevant genes, regress cell-cycle effects, example regression can performed arbitrary gene set. preset gene lists included seuFLViz including cell-cycle, mitochondrial, apoptosis related gene sets.","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/articles/shiny_app.html","id":"technical-information","dir":"Articles","previous_headings":"","what":"Technical information","title":"Shiny App","text":"Technical information regarding upstream processing, software version numbers, dataset features can viewed.","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/articles/shiny_app.html","id":"server-mode","dir":"Articles","previous_headings":"","what":"Server Mode","title":"Shiny App","text":"want work seurat objects interactively save results exploratory data analysis need operate seuFLViz server mode. operating manner possible carry basic project management tasks including: * Loading saved seurat objects * Saving seurat objects making changes app : * Reformatting metadata * Subsetting remove cells * Regressing feature expression well * Integrating multiple saved seurat objects Finally, server mode necessary expanded functionality including: * Coverage plotting * RNA velocity server mode requires access sqlite databases file path details stored ~/.cache/seuFLViz. single_cell_projects.db bigwig_files.db allowing dynamic loading seurat objects bigwig (.bw) sample coverage files cell. initialized upon package installation using creat_project_db function. following sections give details expanded functionality.","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/articles/shiny_app.html","id":"integrate-projects","dir":"Articles","previous_headings":"Server Mode","what":"Integrate Projects","title":"Shiny App","text":"operating seuFLViz server mode, separate sequencing batches can integrated compared validate sample processing steps exclude technical variation favor relevant biological variation. section includes list projects can selected, integrated, saved future analysis.","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/articles/shiny_app.html","id":"coverage-plots","dir":"Articles","previous_headings":"Server Mode","what":"Coverage plots","title":"Shiny App","text":"Fine-grained analysis isoform contributions can achieved plotting absolute read coverage plots across given gene. indicate **read depths across transcripts different groups cells within genomic region. three user input parameters : 1. ‘Select gene’- Select gene interest 2. ‘Color variable’- Select variable group cells 3. ‘Groups display’- Select groups displayed","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/articles/shiny_app.html","id":"rna-velocity","dir":"Articles","previous_headings":"Server Mode","what":"RNA Velocity","title":"Shiny App","text":"RNA velocity can used forecast future state given cell developmental time-dependent process. seuFLViz provides visualization processing functionality using velocyto. Velocity can represented UMAP tSNE plots multiple formats exported needed. RNA velocity necessitates calculation spliced unspliced transcript counts implemented command-line velocyto. result integration within seuFLViz demands familiarity command-line availability properly formatted loom file. enable plotting RNA velocity, path corresponding loom file must provided.","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/articles/visualization.html","id":"plot-expression","dir":"Articles","previous_headings":"","what":"Plot expression","title":"Visualization","text":"Expression one features (genes transcripts) can plotted given embedding, resulting interactive, single multi-feature plot. plotting one feature, output identical Seurat::FeaturePlot  interactive output plot can generated specifying return_plotly = TRUE uses ggplotly allowing identification individual cells investigation.","code":"plot_feature(human_gene_transcript_seu,     embedding = \"umap\",     features = \"NRL\", return_plotly = FALSE )"},{"path":"https://cobriniklab.github.io/seuFLViz/articles/visualization.html","id":"plot-read-count-or-other-qc-measurements","dir":"Articles","previous_headings":"Plot expression","what":"Plot read count or other QC measurements","title":"Visualization","text":"plot_readcount function displays histogram cell read counts colored according categorical variable using argument color.. can see read counts dataset distinctly different depending method organoid preparation used (Kuwahara Zhong)","code":"plot_readcount(human_gene_transcript_seu,     metavar = \"nCount_RNA\",     color.by = \"Prep.Method\" )"},{"path":"https://cobriniklab.github.io/seuFLViz/articles/visualization.html","id":"plot","dir":"Articles","previous_headings":"Plot expression","what":"Plot","title":"Visualization","text":"seuFLViz contains function produces interactive scatter plot metadata variable, point plot represents cell whose position plot given cell embedding determined dimensional reduction technique. default dimension reduction used “UMAP”. group argument plot_var() function allows user enter metadata variable group cells , default value set “batch”.  function utilizes Seurat function, DimPlot(), sub function produces dimensional reduction plot.interactive parameter, return_plotly, plot_var set TRUE convert plot interactive plot using ggplotly function R’s plotly package","code":"plot_var(human_gene_transcript_seu, group = \"type\", embedding = \"umap\")"},{"path":"https://cobriniklab.github.io/seuFLViz/articles/visualization.html","id":"plot-cluster-marker-genes","dir":"Articles","previous_headings":"Plot expression","what":"Plot cluster marker genes","title":"Visualization","text":"Marker genes louvain clusters additional experimental metadata can plotted using plot_markers. allows visualization n marker features grouped metadata interest. Marker genes identified using wilcoxon rank-sum test implemented presto. resulting dot plot size dot corresponds percentage cells expressing feature cluster color represents average expression level feature.","code":"plot_markers(human_gene_transcript_seu,     metavar = \"gene_snn_res.0.2\",     marker_method = \"presto\" )"},{"path":"https://cobriniklab.github.io/seuFLViz/articles/visualization.html","id":"violin-plot","dir":"Articles","previous_headings":"Plot expression","what":"Violin plot","title":"Visualization","text":"visualize distribution expression level feature different groups cells seuFLViz draws violin plot. function uses Seurat’s VInPlot() function sub-function create violin plot, metadata variable, provided function variable plot_var, used group cells based level feature expression violin plot produced.","code":"plot_violin(human_gene_transcript_seu, plot_var = \"type\", features = \"NRL\")"},{"path":"https://cobriniklab.github.io/seuFLViz/articles/visualization.html","id":"ploting-all-transcripts","dir":"Articles","previous_headings":"Plot expression","what":"Ploting all transcripts","title":"Visualization","text":"function plots expression level transcripts present given Seurat object, coding feature/gene interest. gene interest specified argument ‘features’ default data superimposed UMAP embedding.","code":"plot_all_transcripts(human_gene_transcript_seu, features = \"NRL\")"},{"path":"https://cobriniklab.github.io/seuFLViz/articles/visualization.html","id":"ploting-transcrpit-composition","dir":"Articles","previous_headings":"Plot expression","what":"Ploting transcrpit composition","title":"Visualization","text":"seuFLViz function produces visual representation expression levels transcript gene map. function plot_transcript_composition() plots proportion reads given gene map transcript. gene interest specified argument ‘gene_symbol’.","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/articles/visualization.html","id":"ploting-ridge-plots-for-cell-cycle-scoring","dir":"Articles","previous_headings":"Plot expression","what":"Ploting ridge plots for cell cycle scoring","title":"Visualization","text":"plot_ridge() function seuFLViz plots ridge plot cell cycle scoring feature, providing visual representation expression level feature cell cycle. function uses two embedded Seurat functions. function CellCycleScoring() assigns cell score based expression G2/M S phase markers. data used function, RidgePlot(), uses user provided ‘features’ argument plot ridge plot features.","code":"plot_cell_cycle_distribution(human_gene_transcript_seu, \"NRL\") plot_cell_cycle_distribution(human_gene_transcript_seu, \"nFeature_RNA\")"},{"path":"https://cobriniklab.github.io/seuFLViz/articles/visualization.html","id":"plot-complex-heatmap-from-seurat-object","dir":"Articles","previous_headings":"Plot expression","what":"Plot Complex heatmap from Seurat object","title":"Visualization","text":"seuFLViz function plots annotated complex heat map Seurat object dendogram added left side top.","code":"top_10_features <- VariableFeatures(human_gene_transcript_seu)[1:10]  seu_complex_heatmap(human_gene_transcript_seu,     features = top_10_features,     group.by = \"gene_snn_res.0.2\" ) seu_complex_heatmap(human_gene_transcript_seu,     features = top_10_features,     group.by = \"gene_snn_res.0.2\", col_arrangement = \"average\" ) seu_complex_heatmap(human_gene_transcript_seu,     features = top_10_features,     group.by = c(\"Prep.Method\", \"gene_snn_res.0.2\"),     col_arrangement = \"gene_snn_res.0.2\" ) seu_complex_heatmap(human_gene_transcript_seu,     features = top_10_features,     group.by = c(\"Prep.Method\", \"gene_snn_res.0.2\"),     col_arrangement = \"Prep.Method\" )"},{"path":"https://cobriniklab.github.io/seuFLViz/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Kevin Stachelek. Author, maintainer. Bhavana Bhat. Author. Roman Hillje. Contributor.            Author included Cerebro fragments","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Stachelek K, Bhat B (2024). seuFLViz: Tools Managing Seurat Objects. R package version 0.6.0,  https://cobriniklab.github.io/seuFLViz/, https://github.com/cobriniklab/seuFLViz.","code":"@Manual{,   title = {seuFLViz: Tools for Managing Seurat Objects},   author = {Kevin Stachelek and Bhavana Bhat},   year = {2024},   note = {R package version 0.6.0,  https://cobriniklab.github.io/seuFLViz/},   url = {https://github.com/cobriniklab/seuFLViz}, }"},{"path":"https://cobriniklab.github.io/seuFLViz/index.html","id":"seuFLViz","dir":"","previous_headings":"","what":"Tools for Managing Seurat Objects","title":"Tools for Managing Seurat Objects","text":"package includes set Shiny apps exploring single cell RNA datasets processed Seurat demo using human gene transcript dataset Shayler et al. (link) available also convenient functions : Clustering Dimensional Reduction Raw Sequencing Data. Integration Label Transfer Louvain Clustering Range Resolutions Cell cycle state regression labeling RNA velocity calculation Velocyto.R scvelo [!WARNING] seuFLViz designed full-length smart-seq based single cell data. Default settings may appropriate droplet (10x) data, though can adjusted. Keep mind best practices regarding normalization, dimensional reduction, etc. using.","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Tools for Managing Seurat Objects","text":"can install released version seuFLViz github :","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/index.html","id":"install-locally-and-run-in-three-steps","dir":"","previous_headings":"Installation","what":"Install locally and run in three steps:","title":"Tools for Managing Seurat Objects","text":"can install seuFLViz locally using following steps: can also customize location app using steps:","code":"install.packages(\"devtools\") devtools::install_github(\"cobriniklab/seuFLViz\") seuFLViz::create_project_db() devtools::install_github(\"cobriniklab/seuFLViz\") seuFLViz::create_project_db(destdir = \"/your/path/to/app\")"},{"path":"https://cobriniklab.github.io/seuFLViz/index.html","id":"getting-started","dir":"","previous_headings":"","what":"Getting Started","title":"Tools for Managing Seurat Objects","text":"First, load seuFLViz packages required","code":"library(seuFLViz) library(Seurat) library(tidyverse) library(ggraph)"},{"path":"https://cobriniklab.github.io/seuFLViz/index.html","id":"tldr","dir":"","previous_headings":"","what":"TLDR","title":"Tools for Managing Seurat Objects","text":"seuFLViz provides single command : construct Seurat object filter genes minimum expression ubiquity normalize scale expression several methods packaged Seurat","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/index.html","id":"run-clustering-on-a-single-seurat-object","dir":"","previous_headings":"","what":"Run clustering on a single seurat object","title":"Tools for Managing Seurat Objects","text":"default clustering run ten different resolutions 0.2 2.0. resolution can specified providing resolution argument numeric vector.","code":"clustered_seu <- clustering_workflow(human_gene_transcript_seu,     experiment_name = \"seurat_hu_trans\",     organism = \"human\" )"},{"path":"https://cobriniklab.github.io/seuFLViz/index.html","id":"get-a-first-look-at-a-processed-dataset-using-an-interactive-shiny-app","dir":"","previous_headings":"","what":"Get a first look at a processed dataset using an interactive shiny app","title":"Tools for Managing Seurat Objects","text":"","code":"minimalSeuratApp(human_gene_transcript_seu)"},{"path":"https://cobriniklab.github.io/seuFLViz/index.html","id":"set-up-a-seurat-object","dir":"","previous_headings":"","what":"Set up a seurat object","title":"Tools for Managing Seurat Objects","text":"start gene cell matrix count/UMI values table cell metadata can create seurat object usual manner using CreatSeuratObject function","code":"human_count[1:5, 1:5]  head(human_meta) myseu <- CreateSeuratObject(human_count, assay = \"gene\", meta.data = human_meta)"},{"path":"https://cobriniklab.github.io/seuFLViz/index.html","id":"preprocess-the-seurat-object","dir":"","previous_headings":"","what":"Preprocess the seurat object","title":"Tools for Managing Seurat Objects","text":"seuFLViz includes handy function preprocess data handles normalization scaling required downstream analysis. needed, parameters can specified user. single function includes seurat sub-functions normalizes, identifies highly variable features scales data","code":"myseu <- seurat_preprocess(myseu)"},{"path":"https://cobriniklab.github.io/seuFLViz/index.html","id":"perform-dimension-reduction","dir":"","previous_headings":"","what":"Perform dimension reduction","title":"Tools for Managing Seurat Objects","text":"seuFLViz also implements standardized dimension reduction step select variable features user-specified threshold perform PCA, tSNE, UMAP. default assay dimension reduction run “gene”.","code":"myseu <- seurat_reduce_dimensions(myseu, assay = \"RNA\")"},{"path":"https://cobriniklab.github.io/seuFLViz/index.html","id":"community-detection-by-clustering","dir":"","previous_headings":"","what":"Community detection by clustering","title":"Tools for Managing Seurat Objects","text":"Clustering analysis performed via Louvain(default) alternative algorithms available Seurat. Clustering performed range resolutions default value ranging 0.2 2 pca reduction function produces clustering analysis via two steps performed using two different sub-functions","code":"seu <- seurat_cluster(seu = Dim_Red_seu, resolution = seq(0.2, 2, by = 0.2))"},{"path":"https://cobriniklab.github.io/seuFLViz/index.html","id":"split-included-dataset-based-on-collection-technology","dir":"","previous_headings":"","what":"Split included dataset based on collection technology","title":"Tools for Managing Seurat Objects","text":"seuFLViz includes function, SplitObject, capable splitting dataset subsets based single attribute indicated split.argument example split_human object consists list subsetted objects split based batch","code":"split_human <- SplitObject(human_gene_transcript_seu, split.by = \"dataset\")"},{"path":"https://cobriniklab.github.io/seuFLViz/index.html","id":"run-seurat-batch-integration-on-child-projects","dir":"","previous_headings":"","what":"Run seurat batch integration on ‘child’ projects","title":"Tools for Managing Seurat Objects","text":"joint analysis 2 datasets performed integration_workflow function can used, takes list seurat objects input returns integrated seurat object","code":"integrated_seu <- integration_workflow(split_human)"},{"path":"https://cobriniklab.github.io/seuFLViz/index.html","id":"view-analysis-details","dir":"","previous_headings":"","what":"View analysis details","title":"Tools for Managing Seurat Objects","text":"","code":"Misc(integrated_seu, \"experiment\") %>%     tibble::enframe() %>%     knitr::kable()"},{"path":"https://cobriniklab.github.io/seuFLViz/reference/Monocle2_diffex.html","id":null,"dir":"Reference","previous_headings":"","what":"Monocle2 differential expression — Monocle2_diffex","title":"Monocle2 differential expression — Monocle2_diffex","text":"Monocle2 differential expression","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/Monocle2_diffex.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Monocle2 differential expression — Monocle2_diffex","text":"","code":"Monocle2_diffex(seu)"},{"path":"https://cobriniklab.github.io/seuFLViz/reference/Monocle2_diffex.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Monocle2 differential expression — Monocle2_diffex","text":"seu","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/SetDefaultAssay.html","id":null,"dir":"Reference","previous_headings":"","what":"Reset default assay — SetDefaultAssay","title":"Reset default assay — SetDefaultAssay","text":"Function reset default assay seurat object","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/SetDefaultAssay.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reset default assay — SetDefaultAssay","text":"","code":"SetDefaultAssay(seu, new_assay)"},{"path":"https://cobriniklab.github.io/seuFLViz/reference/SetDefaultAssay.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reset default assay — SetDefaultAssay","text":"seu seurat object new_assay Assay set default assay","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/add_census_slot.html","id":null,"dir":"Reference","previous_headings":"","what":"add census assay to a seurat object — add_census_slot","title":"add census assay to a seurat object — add_census_slot","text":"add census assay seurat object","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/add_census_slot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"add census assay to a seurat object — add_census_slot","text":"","code":"add_census_slot(seu, assay = \"gene\", slot = \"counts\")"},{"path":"https://cobriniklab.github.io/seuFLViz/reference/add_census_slot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"add census assay to a seurat object — add_census_slot","text":"slot","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/add_percent_mito.html","id":null,"dir":"Reference","previous_headings":"","what":"Annotate percent mitochondrial reads per cell — add_percent_mito","title":"Annotate percent mitochondrial reads per cell — add_percent_mito","text":"Add Read Count Categorical Variable Seurat Object (based nCount_RNA)","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/add_percent_mito.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Annotate percent mitochondrial reads per cell — add_percent_mito","text":"","code":"add_percent_mito(seu, organism = organism, seurat_assay = \"gene\")"},{"path":"https://cobriniklab.github.io/seuFLViz/reference/add_percent_mito.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Annotate percent mitochondrial reads per cell — add_percent_mito","text":"seu seurat object seurat_assay gene","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/add_percent_mito.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Annotate percent mitochondrial reads per cell — add_percent_mito","text":"","code":"add_percent_mito(panc8) add_percent_mito(baron2016singlecell, organism = \"mouse\")"},{"path":"https://cobriniklab.github.io/seuFLViz/reference/add_read_count_col.html","id":null,"dir":"Reference","previous_headings":"","what":"Annotate Low Read Count Category — add_read_count_col","title":"Annotate Low Read Count Category — add_read_count_col","text":"Add Read Count Categorical Variable Seurat Object (based nCount_RNA)","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/add_read_count_col.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Annotate Low Read Count Category — add_read_count_col","text":"","code":"add_read_count_col(seu, thresh = 1e+05)"},{"path":"https://cobriniklab.github.io/seuFLViz/reference/add_read_count_col.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Annotate Low Read Count Category — add_read_count_col","text":"seu seurat object thresh Set threshold low read count","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/allTranscripts.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot All Transcripts Server — allTranscripts","title":"Plot All Transcripts Server — allTranscripts","text":"Plot Transcripts Server","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/allTranscripts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot All Transcripts Server — allTranscripts","text":"","code":"allTranscripts(input, output, session, seu, featureType, organism_type)"},{"path":"https://cobriniklab.github.io/seuFLViz/reference/allTranscripts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot All Transcripts Server — allTranscripts","text":"featureType","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/allTranscriptsui.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot All Transcripts UI Module — allTranscriptsui","title":"Plot All Transcripts UI Module — allTranscriptsui","text":"Plot Transcripts UI Module","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/allTranscriptsui.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot All Transcripts UI Module — allTranscriptsui","text":"","code":"allTranscriptsui(id)"},{"path":"https://cobriniklab.github.io/seuFLViz/reference/allTranscriptsui.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot All Transcripts UI Module — allTranscriptsui","text":"id","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/annotate_cell_cycle.html","id":null,"dir":"Reference","previous_headings":"","what":"Annotate Cell Cycle — annotate_cell_cycle","title":"Annotate Cell Cycle — annotate_cell_cycle","text":"Annotate Cell Cycle Gene Transcript Seurat Objects","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/annotate_cell_cycle.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Annotate Cell Cycle — annotate_cell_cycle","text":"","code":"annotate_cell_cycle(seu, organism = \"human\", ...)"},{"path":"https://cobriniklab.github.io/seuFLViz/reference/annotate_cell_cycle.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Annotate Cell Cycle — annotate_cell_cycle","text":"seu seurat object organism organism. Default \"human\"","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/annotate_cell_cycle.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Annotate Cell Cycle — annotate_cell_cycle","text":"","code":"annotate_cell_cycle(panc8, organism = \"human\") annotate_cell_cycle(baron2016singlecell, organism = \"mouse\")"},{"path":"https://cobriniklab.github.io/seuFLViz/reference/annotate_excluded.html","id":null,"dir":"Reference","previous_headings":"","what":"Annotate Exclusion Criteria — annotate_excluded","title":"Annotate Exclusion Criteria — annotate_excluded","text":"Annotate Exclusion Criteria","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/annotate_excluded.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Annotate Exclusion Criteria — annotate_excluded","text":"","code":"annotate_excluded(seu, ...)"},{"path":"https://cobriniklab.github.io/seuFLViz/reference/annotate_excluded.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Annotate Exclusion Criteria — annotate_excluded","text":"seu seurat object excluded_cells named list cells excluded form list(set1 = c(cell1, celll2), set2 = c(cell3, cell4)) cells marked NA column titled \"excluded_because\"","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/append_to_project_db.html","id":null,"dir":"Reference","previous_headings":"","what":"Update a database of seuFLViz projects — append_to_project_db","title":"Update a database of seuFLViz projects — append_to_project_db","text":"Append projects datatbase","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/append_to_project_db.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Update a database of seuFLViz projects — append_to_project_db","text":"","code":"append_to_project_db(   new_project_path,   projects_dir = NULL,   cache_location = \"~/.cache/seuFLViz\",   sqlite_db = \"single-cell-projects.db\",   verbose = TRUE )"},{"path":"https://cobriniklab.github.io/seuFLViz/reference/append_to_project_db.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Update a database of seuFLViz projects — append_to_project_db","text":"cache_location Path cache \"~/.cache/seuFLViz\" sqlite_db sqlite db verbose","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/arrange_ptime_heatmaps.html","id":null,"dir":"Reference","previous_headings":"","what":"Arrange processed monocle CDS objects containing heatmaps — arrange_ptime_heatmaps","title":"Arrange processed monocle CDS objects containing heatmaps — arrange_ptime_heatmaps","text":"Arrange processed monocle CDS objects containing heatmaps","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/arrange_ptime_heatmaps.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Arrange processed monocle CDS objects containing heatmaps — arrange_ptime_heatmaps","text":"","code":"arrange_ptime_heatmaps(cds_list, cds_name)"},{"path":"https://cobriniklab.github.io/seuFLViz/reference/arrange_ptime_heatmaps.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Arrange processed monocle CDS objects containing heatmaps — arrange_ptime_heatmaps","text":"cds_list","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/assign_clusters_to_cds.html","id":null,"dir":"Reference","previous_headings":"","what":"Assign Clusters to CDS — assign_clusters_to_cds","title":"Assign Clusters to CDS — assign_clusters_to_cds","text":"Assign Clusters CDS","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/assign_clusters_to_cds.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Assign Clusters to CDS — assign_clusters_to_cds","text":"","code":"assign_clusters_to_cds(cds, clusters)"},{"path":"https://cobriniklab.github.io/seuFLViz/reference/assign_clusters_to_cds.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Assign Clusters to CDS — assign_clusters_to_cds","text":"clusters","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/build_bigwig_db.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a database of bigwigfiles — build_bigwig_db","title":"Create a database of bigwigfiles — build_bigwig_db","text":"Create sqlite database bigwig files matching cell ids seurat objects","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/build_bigwig_db.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a database of bigwigfiles — build_bigwig_db","text":"","code":"build_bigwig_db(bam_files, bigwig_db = \"~/.cache/seuFLViz/bw-files.db\")"},{"path":"https://cobriniklab.github.io/seuFLViz/reference/build_bigwig_db.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a database of bigwigfiles — build_bigwig_db","text":"bigwig_db","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/by_row_corr_between_pt_heatmaps.html","id":null,"dir":"Reference","previous_headings":"","what":"calculate row-wise correlation between two dataframes — by_row_corr_between_pt_heatmaps","title":"calculate row-wise correlation between two dataframes — by_row_corr_between_pt_heatmaps","text":"calculate row-wise correlation two dataframes","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/by_row_corr_between_pt_heatmaps.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"calculate row-wise correlation between two dataframes — by_row_corr_between_pt_heatmaps","text":"","code":"by_row_corr_between_pt_heatmaps(df1, df2)"},{"path":"https://cobriniklab.github.io/seuFLViz/reference/by_row_corr_between_pt_heatmaps.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"calculate row-wise correlation between two dataframes — by_row_corr_between_pt_heatmaps","text":"df2","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/calc_cor_across_heatmaps.html","id":null,"dir":"Reference","previous_headings":"","what":"calculate correlation between heatmap matrices in processed cds_gene_list — calc_cor_across_heatmaps","title":"calculate correlation between heatmap matrices in processed cds_gene_list — calc_cor_across_heatmaps","text":"calculate correlation heatmap matrices processed cds_gene_list","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/calc_cor_across_heatmaps.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"calculate correlation between heatmap matrices in processed cds_gene_list — calc_cor_across_heatmaps","text":"","code":"calc_cor_across_heatmaps(cds_set, cds_set_name)"},{"path":"https://cobriniklab.github.io/seuFLViz/reference/calc_cor_across_heatmaps.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"calculate correlation between heatmap matrices in processed cds_gene_list — calc_cor_across_heatmaps","text":"cds_set_name","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/calc_pseudotime_heatmap.html","id":null,"dir":"Reference","previous_headings":"","what":"calculate pseudotime heatmaps — calc_pseudotime_heatmap","title":"calculate pseudotime heatmaps — calc_pseudotime_heatmap","text":"calculate pseudotime heatmaps","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/calc_pseudotime_heatmap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"calculate pseudotime heatmaps — calc_pseudotime_heatmap","text":"","code":"calc_pseudotime_heatmap(   cds_subset,   cluster_rows = TRUE,   dend_k = 6,   hclust_method = \"ward.D2\",   num_clusters = 6,   hmcols = NULL,   add_annotation_row = NULL,   add_annotation_col = NULL,   show_rownames = FALSE,   use_gene_short_name = TRUE,   norm_method = c(\"log\", \"vstExprs\"),   scale_max = 3,   scale_min = -3,   trend_formula = \"~sm.ns(Pseudotime, df=3)\",   return_heatmap = FALSE,   cores = 1,   ... )"},{"path":"https://cobriniklab.github.io/seuFLViz/reference/calc_pseudotime_heatmap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"calculate pseudotime heatmaps — calc_pseudotime_heatmap","text":"...","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/ccScore.html","id":null,"dir":"Reference","previous_headings":"","what":"Cell Cycle Score — ccScore","title":"Cell Cycle Score — ccScore","text":"Cell Cycle Score","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/ccScore.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cell Cycle Score — ccScore","text":"","code":"ccScore(input, output, session)"},{"path":"https://cobriniklab.github.io/seuFLViz/reference/ccScore.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cell Cycle Score — ccScore","text":"session","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/ccScoreui.html","id":null,"dir":"Reference","previous_headings":"","what":"Cell Cycle Score UI — ccScoreui","title":"Cell Cycle Score UI — ccScoreui","text":"Cell Cycle Score UI","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/ccScoreui.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cell Cycle Score UI — ccScoreui","text":"","code":"ccScoreui(id)"},{"path":"https://cobriniklab.github.io/seuFLViz/reference/ccScoreui.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cell Cycle Score UI — ccScoreui","text":"id","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/cells_selected.html","id":null,"dir":"Reference","previous_headings":"","what":"Title — cells_selected","title":"Title — cells_selected","text":"Title","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/cells_selected.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Title — cells_selected","text":"","code":"cells_selected(input)"},{"path":"https://cobriniklab.github.io/seuFLViz/reference/cells_selected.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Title — cells_selected","text":"input","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/celltype_markers.html","id":null,"dir":"Reference","previous_headings":"","what":"Retinal Cell Type Marker Genes — celltype_markers","title":"Retinal Cell Type Marker Genes — celltype_markers","text":"Retinal Cell Type Marker Genes","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/celltype_markers.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retinal Cell Type Marker Genes — celltype_markers","text":"","code":"celltype_markers"},{"path":"https://cobriniklab.github.io/seuFLViz/reference/celltype_markers.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Retinal Cell Type Marker Genes — celltype_markers","text":"data frame 99 rows 3 variables: gene character COLUMN_DESCRIPTION cell_type character COLUMN_DESCRIPTION species character COLUMN_DESCRIPTION","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/celltype_markers.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Retinal Cell Type Marker Genes — celltype_markers","text":"Cui et al. (2020). Transcriptomic Analysis Developmental Similarities Differences Native Retina Retinal Organoids. Invest. Ophthalmol. Vis. Sci. 61, 6–6.","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/changeEmbedParams.html","id":null,"dir":"Reference","previous_headings":"","what":"Change Embedding Parameters — changeEmbedParams","title":"Change Embedding Parameters — changeEmbedParams","text":"Change Embedding Parameters","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/changeEmbedParams.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Change Embedding Parameters — changeEmbedParams","text":"","code":"changeEmbedParams(input, output, session, seu)"},{"path":"https://cobriniklab.github.io/seuFLViz/reference/changeEmbedParams.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Change Embedding Parameters — changeEmbedParams","text":"seu","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/changeEmbedParamsui.html","id":null,"dir":"Reference","previous_headings":"","what":"Change Embedding Parameters UI — changeEmbedParamsui","title":"Change Embedding Parameters UI — changeEmbedParamsui","text":"Change Embedding Parameters UI","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/changeEmbedParamsui.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Change Embedding Parameters UI — changeEmbedParamsui","text":"","code":"changeEmbedParamsui(id)"},{"path":"https://cobriniklab.github.io/seuFLViz/reference/changeEmbedParamsui.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Change Embedding Parameters UI — changeEmbedParamsui","text":"id","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/chevreulBox.html","id":null,"dir":"Reference","previous_headings":"","what":"custom collapsible box — seuFLVizBox","title":"custom collapsible box — seuFLVizBox","text":"custom collapsible box","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/chevreulBox.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"custom collapsible box — seuFLVizBox","text":"","code":"seuFLVizBox(title = \"\", ...)"},{"path":"https://cobriniklab.github.io/seuFLViz/reference/chevreulBox.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"custom collapsible box — seuFLVizBox","text":"title","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/clustering_workflow.html","id":null,"dir":"Reference","previous_headings":"","what":"Clustering Workflow — clustering_workflow","title":"Clustering Workflow — clustering_workflow","text":"Cluster Reduce Dimensions seurat object","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/clustering_workflow.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Clustering Workflow — clustering_workflow","text":"","code":"clustering_workflow(   seu,   excluded_cells,   resolution = seq(0.2, 2, by = 0.2),   organism = \"human\",   experiment_name = \"default_experiment\",   ... )"},{"path":"https://cobriniklab.github.io/seuFLViz/reference/clustering_workflow.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Clustering Workflow — clustering_workflow","text":"excluded_cells named list cells exclude resolution resolution(s) use clustering cells organism Organism ...  feature_seus list seurat objects named according feature interest (\"gene\" \"transcript\")","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/clustering_workflow.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Clustering Workflow — clustering_workflow","text":"","code":"clustered_human_seu <- clustering_workflow(panc8, experiment_name = \"seurat_pancreas\", organism = \"human\") clustered_mouse_seu <- clustering_workflow(baron2016singlecell)"},{"path":"https://cobriniklab.github.io/seuFLViz/reference/combine_cols.html","id":null,"dir":"Reference","previous_headings":"","what":"Reformat Seurat Object Metadata — combine_cols","title":"Reformat Seurat Object Metadata — combine_cols","text":"Reformat Seurat Object Metadata Coalesced Columns","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/combine_cols.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reformat Seurat Object Metadata — combine_cols","text":"","code":"combine_cols(seu, cols, new_col)"},{"path":"https://cobriniklab.github.io/seuFLViz/reference/combine_cols.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reformat Seurat Object Metadata — combine_cols","text":"seu Seurat object cols Columns new_col New columns","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/combine_cols.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Reformat Seurat Object Metadata — combine_cols","text":"table new metadata columns","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/combine_looms.html","id":null,"dir":"Reference","previous_headings":"","what":"Combine Loom Files — combine_looms","title":"Combine Loom Files — combine_looms","text":"Combine Loom Files","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/combine_looms.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Combine Loom Files — combine_looms","text":"","code":"combine_looms(projectPaths, newProjectPath)"},{"path":"https://cobriniklab.github.io/seuFLViz/reference/combine_looms.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Combine Loom Files — combine_looms","text":"newProjectPath","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/convert_human_seu_to_mouse.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert Seurat Objects from Human to Mouse — convert_human_seu_to_mouse","title":"Convert Seurat Objects from Human to Mouse — convert_human_seu_to_mouse","text":"Convert Seurat Objects Human Mouse","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/convert_human_seu_to_mouse.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert Seurat Objects from Human to Mouse — convert_human_seu_to_mouse","text":"","code":"convert_human_seu_to_mouse(seu, ...)"},{"path":"https://cobriniklab.github.io/seuFLViz/reference/convert_human_seu_to_mouse.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert Seurat Objects from Human to Mouse — convert_human_seu_to_mouse","text":"seu Human Seurat object ... passed convert_symbols_by_species","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/convert_monoclev2_to_seuv3.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert a Seurat V3 object to a Monocle v2 object — convert_monoclev2_to_seuv3","title":"Convert a Seurat V3 object to a Monocle v2 object — convert_monoclev2_to_seuv3","text":"Convert Seurat V3 object Monocle v2 object","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/convert_monoclev2_to_seuv3.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert a Seurat V3 object to a Monocle v2 object — convert_monoclev2_to_seuv3","text":"","code":"convert_monoclev2_to_seuv3(   seu,   assay = \"gene\",   slot = \"data\",   return_census = FALSE,   sig_slice = 1000 )"},{"path":"https://cobriniklab.github.io/seuFLViz/reference/convert_monoclev2_to_seuv3.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert a Seurat V3 object to a Monocle v2 object — convert_monoclev2_to_seuv3","text":"seu","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/convert_mouse_seu_to_human.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert Seurat Objects from Mouse to Human — convert_mouse_seu_to_human","title":"Convert Seurat Objects from Mouse to Human — convert_mouse_seu_to_human","text":"Convert Seurat Objects Mouse Human","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/convert_mouse_seu_to_human.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert Seurat Objects from Mouse to Human — convert_mouse_seu_to_human","text":"","code":"convert_mouse_seu_to_human(seu)"},{"path":"https://cobriniklab.github.io/seuFLViz/reference/convert_mouse_seu_to_human.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert Seurat Objects from Mouse to Human — convert_mouse_seu_to_human","text":"seu Mouse seurat object","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/convert_mouse_seu_to_human.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert Seurat Objects from Mouse to Human — convert_mouse_seu_to_human","text":"","code":"convert_mouse_seu_to_human(baron2016singlecell)"},{"path":"https://cobriniklab.github.io/seuFLViz/reference/convert_seu_list_to_multimodal.html","id":null,"dir":"Reference","previous_headings":"","what":"convert seurat list to multimodal object — convert_seu_list_to_multimodal","title":"convert seurat list to multimodal object — convert_seu_list_to_multimodal","text":"convert seurat list multimodal object","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/convert_seu_list_to_multimodal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"convert seurat list to multimodal object — convert_seu_list_to_multimodal","text":"","code":"convert_seu_list_to_multimodal(seu_list)"},{"path":"https://cobriniklab.github.io/seuFLViz/reference/convert_seu_list_to_multimodal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"convert seurat list to multimodal object — convert_seu_list_to_multimodal","text":"seu_list seurat list","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/convert_seu_to_cds.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert a Seurat Object to a Monocle Cell Data Set — convert_seu_to_cds","title":"Convert a Seurat Object to a Monocle Cell Data Set — convert_seu_to_cds","text":"Convert Seurat Object Monocle Cell Data Set","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/convert_seu_to_cds.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert a Seurat Object to a Monocle Cell Data Set — convert_seu_to_cds","text":"","code":"convert_seu_to_cds(seu, resolution = 1, min_expression = 0.05)"},{"path":"https://cobriniklab.github.io/seuFLViz/reference/convert_seu_to_cds.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert a Seurat Object to a Monocle Cell Data Set — convert_seu_to_cds","text":"seu","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/convert_seu_to_cds.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert a Seurat Object to a Monocle Cell Data Set — convert_seu_to_cds","text":"","code":"processed_seu <- clustering_workflow(human_gene_transcript_seu) cds <- convert_seu_to_cds(processed_seu)"},{"path":"https://cobriniklab.github.io/seuFLViz/reference/convert_seurat_to_sce.html","id":null,"dir":"Reference","previous_headings":"","what":"convert seurat object to cds — convert_seurat_to_sce","title":"convert seurat object to cds — convert_seurat_to_sce","text":"convert seurat object cds","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/convert_seurat_to_sce.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"convert seurat object to cds — convert_seurat_to_sce","text":"","code":"convert_seurat_to_sce(seu)"},{"path":"https://cobriniklab.github.io/seuFLViz/reference/convert_seurat_to_sce.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"convert seurat object to cds — convert_seurat_to_sce","text":"seu","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/convert_seuv3_to_monoclev2.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert a Seurat V3 object to a Monocle v2 object — convert_seuv3_to_monoclev2","title":"Convert a Seurat V3 object to a Monocle v2 object — convert_seuv3_to_monoclev2","text":"Convert Seurat V3 object Monocle v2 object","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/convert_seuv3_to_monoclev2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert a Seurat V3 object to a Monocle v2 object — convert_seuv3_to_monoclev2","text":"","code":"convert_seuv3_to_monoclev2(   seu,   assay = \"gene\",   slot = \"data\",   return_census = FALSE,   sig_slice = 1000 )"},{"path":"https://cobriniklab.github.io/seuFLViz/reference/convert_seuv3_to_monoclev2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert a Seurat V3 object to a Monocle v2 object — convert_seuv3_to_monoclev2","text":"seu","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/convert_symbols_by_species.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert gene symbols between mouse and human — convert_symbols_by_species","title":"Convert gene symbols between mouse and human — convert_symbols_by_species","text":"Convert gene symbols mouse human","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/convert_symbols_by_species.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert gene symbols between mouse and human — convert_symbols_by_species","text":"","code":"convert_symbols_by_species(src_genes, src_species)"},{"path":"https://cobriniklab.github.io/seuFLViz/reference/convert_symbols_by_species.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert gene symbols between mouse and human — convert_symbols_by_species","text":"src_genes Source gene symbol converted src_species Source species","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/convert_symbols_by_species.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert gene symbols between mouse and human — convert_symbols_by_species","text":"","code":"convert_symbols_by_species(\"RXRG\", \"human\")  convert_symbols_by_species(\"Rxrg\", \"mouse\")"},{"path":"https://cobriniklab.github.io/seuFLViz/reference/convert_to_h5ad.html","id":null,"dir":"Reference","previous_headings":"","what":"convert a seurat object to an on-disk anndata object — convert_to_h5ad","title":"convert a seurat object to an on-disk anndata object — convert_to_h5ad","text":"convert seurat object -disk anndata object","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/convert_to_h5ad.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"convert a seurat object to an on-disk anndata object — convert_to_h5ad","text":"","code":"convert_to_h5ad(seu, file_path)"},{"path":"https://cobriniklab.github.io/seuFLViz/reference/convert_to_h5ad.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"convert a seurat object to an on-disk anndata object — convert_to_h5ad","text":"file_path","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/convert_to_h5ad.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"convert a seurat object to an on-disk anndata object — convert_to_h5ad","text":"","code":"convert_to_h5ad(human_gene_transcript_seu, \"inst/extdata/seu.rds\")"},{"path":"https://cobriniklab.github.io/seuFLViz/reference/convert_v3_to_v5.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert seurat object to seurat V5 format — convert_v3_to_v5","title":"Convert seurat object to seurat V5 format — convert_v3_to_v5","text":"Convert seurat object v3 v5 format","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/convert_v3_to_v5.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert seurat object to seurat V5 format — convert_v3_to_v5","text":"","code":"convert_v3_to_v5(seu_v3)"},{"path":"https://cobriniklab.github.io/seuFLViz/reference/convert_v3_to_v5.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert seurat object to seurat V5 format — convert_v3_to_v5","text":"seu_v3 version 3 seurat object","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/convert_v3_to_v5.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert seurat object to seurat V5 format — convert_v3_to_v5","text":"","code":"convert_v3_to_v5(human_gene_transcript_seu)"},{"path":"https://cobriniklab.github.io/seuFLViz/reference/create_proj_matrix.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a Table of single Cell Projects — create_proj_matrix","title":"Create a Table of single Cell Projects — create_proj_matrix","text":"Uses list projects create matrix single cell projects","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/create_proj_matrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a Table of single Cell Projects — create_proj_matrix","text":"","code":"create_proj_matrix(proj_list)"},{"path":"https://cobriniklab.github.io/seuFLViz/reference/create_proj_matrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a Table of single Cell Projects — create_proj_matrix","text":"proj_list List projects","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/create_project_db.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a database of seuFLViz projects — create_project_db","title":"Create a database of seuFLViz projects — create_project_db","text":"Create database containing seuFLViz projects","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/create_project_db.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a database of seuFLViz projects — create_project_db","text":"","code":"create_project_db(   cache_location = \"~/.cache/seuFLViz\",   sqlite_db = \"single-cell-projects.db\",   verbose = TRUE )"},{"path":"https://cobriniklab.github.io/seuFLViz/reference/create_project_db.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a database of seuFLViz projects — create_project_db","text":"cache_location Path cache \"~/.cache/seuFLViz\" sqlite_db Database created verbose","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/cross_check_heatmaps.html","id":null,"dir":"Reference","previous_headings":"","what":"Title — cross_check_heatmaps","title":"Title — cross_check_heatmaps","text":"Title","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/cross_check_heatmaps.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Title — cross_check_heatmaps","text":"","code":"cross_check_heatmaps(   monocle_list,   query_name,   set_row_order = NULL,   cluster_rows = T,   ... )"},{"path":"https://cobriniklab.github.io/seuFLViz/reference/cross_check_heatmaps.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Title — cross_check_heatmaps","text":"cluster_rows","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/cross_plot_vars.html","id":null,"dir":"Reference","previous_headings":"","what":"Cross plot vars — cross_plot_vars","title":"Cross plot vars — cross_plot_vars","text":"Cross plot vars","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/cross_plot_vars.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cross plot vars — cross_plot_vars","text":"","code":"cross_plot_vars(seu, resolution, mycols)"},{"path":"https://cobriniklab.github.io/seuFLViz/reference/cross_plot_vars.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cross plot vars — cross_plot_vars","text":"mycols","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/cross_species_integrate.html","id":null,"dir":"Reference","previous_headings":"","what":"Integrate Seurat Objects from Mouse to Human — cross_species_integrate","title":"Integrate Seurat Objects from Mouse to Human — cross_species_integrate","text":"Integrate Seurat Objects Mouse Human","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/cross_species_integrate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Integrate Seurat Objects from Mouse to Human — cross_species_integrate","text":"","code":"cross_species_integrate(   mouse_seu_list,   human_seu_list,   excluded_cells = NULL,   ... )"},{"path":"https://cobriniklab.github.io/seuFLViz/reference/cross_species_integrate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Integrate Seurat Objects from Mouse to Human — cross_species_integrate","text":"mouse_seu_list Mouse Seurat object human_seu_list Human Seurat object","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/cross_species_integrate.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Integrate Seurat Objects from Mouse to Human — cross_species_integrate","text":"","code":"cross_species_integrate(list(baron2016singlecell = baron2016singlecell), list(panc8 = panc8))"},{"path":"https://cobriniklab.github.io/seuFLViz/reference/default_helper.html","id":null,"dir":"Reference","previous_headings":"","what":"Default Shiny Helper — default_helper","title":"Default Shiny Helper — default_helper","text":"Default Shiny Helper","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/default_helper.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Default Shiny Helper — default_helper","text":"","code":"default_helper(ui_element, title = \"\", content = \"test\", type = \"inline\", ...)"},{"path":"https://cobriniklab.github.io/seuFLViz/reference/default_helper.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Default Shiny Helper — default_helper","text":"...","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/diffex.html","id":null,"dir":"Reference","previous_headings":"","what":"Differential Expression — diffex","title":"Differential Expression — diffex","text":"Differential Expression","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/diffex.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Differential Expression — diffex","text":"","code":"diffex(   input,   output,   session,   seu,   featureType,   selected_cells,   tests = c(`t-test` = \"t\", `wilcoxon rank-sum test` = \"wilcox\",     `Likelihood-ratio test (bimodal)` = \"bimod\", MAST = \"MAST\") )"},{"path":"https://cobriniklab.github.io/seuFLViz/reference/diffex.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Differential Expression — diffex","text":"tests","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/diffexui.html","id":null,"dir":"Reference","previous_headings":"","what":"Differential Expression UI — diffexui","title":"Differential Expression UI — diffexui","text":"Differential Expression UI","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/diffexui.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Differential Expression UI — diffexui","text":"","code":"diffexui(id)"},{"path":"https://cobriniklab.github.io/seuFLViz/reference/diffexui.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Differential Expression UI — diffexui","text":"id","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/dockerSeuratApp.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a seurat app on a shinyproxy docker instance — dockerSeuratApp","title":"Create a seurat app on a shinyproxy docker instance — dockerSeuratApp","text":"Create seurat app shinyproxy docker instance","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/dockerSeuratApp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a seurat app on a shinyproxy docker instance — dockerSeuratApp","text":"","code":"dockerSeuratApp(   object = panc8,   loom_path = NULL,   appTitle = NULL,   organism_type = \"human\",   futureMb = 13000,   bigwig_db = \"~/.cache/seuFLViz/bw-files.db\" )"},{"path":"https://cobriniklab.github.io/seuFLViz/reference/dockerSeuratApp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a seurat app on a shinyproxy docker instance — dockerSeuratApp","text":"object seurat object loom_path path loom file futureMb #' @param bigwigb  path sqlite database listing bigwig files cells seurat object","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/dockerSeuratApp.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a seurat app on a shinyproxy docker instance — dockerSeuratApp","text":"","code":"if (FALSE) { dockerSeuratApp(panc8) }"},{"path":"https://cobriniklab.github.io/seuFLViz/reference/dot-send_enrichr_query.html","id":null,"dir":"Reference","previous_headings":"","what":"Gene enrichment using Enrichr. — .send_enrichr_query","title":"Gene enrichment using Enrichr. — .send_enrichr_query","text":"Gene enrichment using Enrichr.","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/dot-send_enrichr_query.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Gene enrichment using Enrichr. — .send_enrichr_query","text":"","code":".send_enrichr_query(genes, databases = NULL, URL_API = NULL)"},{"path":"https://cobriniklab.github.io/seuFLViz/reference/dot-send_enrichr_query.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Gene enrichment using Enrichr. — .send_enrichr_query","text":"genes Gene names dataframe gene names first column score 0 1 . databases Databases search. URL_API URL send requests (Enrichr API). See http://amp.pharm.mssm.edu/Enrichr/ available databases.","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/dot-send_enrichr_query.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Gene enrichment using Enrichr. — .send_enrichr_query","text":"Returns data frame enrichment terms, p-values, ...","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/dot-send_enrichr_query.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Gene enrichment using Enrichr. — .send_enrichr_query","text":"Gene enrichment using Enrichr.","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/dot-send_enrichr_query.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Gene enrichment using Enrichr. — .send_enrichr_query","text":"Wajid Jawaid, modified Roman Hillje","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/dropdownButton.html","id":null,"dir":"Reference","previous_headings":"","what":"Custom Dropdown Button — dropdownButton","title":"Custom Dropdown Button — dropdownButton","text":"Custom Dropdown Button","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/dropdownButton.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Custom Dropdown Button — dropdownButton","text":"","code":"dropdownButton(inputId, ...)"},{"path":"https://cobriniklab.github.io/seuFLViz/reference/dropdownButton.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Custom Dropdown Button — dropdownButton","text":"...","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/enframe_markers.html","id":null,"dir":"Reference","previous_headings":"","what":"Enframe seurat markers — enframe_markers","title":"Enframe seurat markers — enframe_markers","text":"Enframe seurat markers","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/enframe_markers.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Enframe seurat markers — enframe_markers","text":"","code":"enframe_markers(marker_table)"},{"path":"https://cobriniklab.github.io/seuFLViz/reference/enframe_markers.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Enframe seurat markers — enframe_markers","text":"marker_table","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/filter_low_rc_cells.html","id":null,"dir":"Reference","previous_headings":"","what":"Filter our Cells from Seurat below read count threshold — filter_low_rc_cells","title":"Filter our Cells from Seurat below read count threshold — filter_low_rc_cells","text":"Filter Cells Seurat read count threshold","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/filter_low_rc_cells.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Filter our Cells from Seurat below read count threshold — filter_low_rc_cells","text":"","code":"filter_low_rc_cells(seu, read_thresh = 1e+05)"},{"path":"https://cobriniklab.github.io/seuFLViz/reference/filter_low_rc_cells.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Filter our Cells from Seurat below read count threshold — filter_low_rc_cells","text":"seu seurat object read_thresh","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/filter_merged_seu.html","id":null,"dir":"Reference","previous_headings":"","what":"Filter a Single Seurat Object — filter_merged_seu","title":"Filter a Single Seurat Object — filter_merged_seu","text":"Filters seurat object, retaining desired values variable","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/filter_merged_seu.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Filter a Single Seurat Object — filter_merged_seu","text":"","code":"filter_merged_seu(seu, filter_var, filter_val, .drop = .drop)"},{"path":"https://cobriniklab.github.io/seuFLViz/reference/filter_merged_seu.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Filter a Single Seurat Object — filter_merged_seu","text":"seu seurat object filter_var Variables filter filter_val Values filter .drop","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/filter_merged_seus.html","id":null,"dir":"Reference","previous_headings":"","what":"Filter a List of Seurat Objects — filter_merged_seus","title":"Filter a List of Seurat Objects — filter_merged_seus","text":"Filter Seurat Objects custom variable reset assay uncorrected \"gene\"","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/filter_merged_seus.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Filter a List of Seurat Objects — filter_merged_seus","text":"","code":"filter_merged_seus(seus, filter_var, filter_val, .drop = F)"},{"path":"https://cobriniklab.github.io/seuFLViz/reference/filter_merged_seus.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Filter a List of Seurat Objects — filter_merged_seus","text":".drop","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/filter_rows_to_top.html","id":null,"dir":"Reference","previous_headings":"","what":"Filter Rows to Top — filter_rows_to_top","title":"Filter Rows to Top — filter_rows_to_top","text":"Filter rows match desired value top.","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/filter_rows_to_top.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Filter Rows to Top — filter_rows_to_top","text":"","code":"filter_rows_to_top(df, column, values)"},{"path":"https://cobriniklab.github.io/seuFLViz/reference/filter_rows_to_top.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Filter Rows to Top — filter_rows_to_top","text":"df data frame column Column containing values choice values Values filtered top","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/findMarkers.html","id":null,"dir":"Reference","previous_headings":"","what":"Find Markers — findMarkers","title":"Find Markers — findMarkers","text":"Find Markers","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/findMarkers.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find Markers — findMarkers","text":"","code":"findMarkers(input, output, session, seu, plot_types, featureType)"},{"path":"https://cobriniklab.github.io/seuFLViz/reference/findMarkers.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find Markers — findMarkers","text":"seu","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/findMarkersui.html","id":null,"dir":"Reference","previous_headings":"","what":"Find Markers UI — findMarkersui","title":"Find Markers UI — findMarkersui","text":"Find Markers UI","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/findMarkersui.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find Markers UI — findMarkersui","text":"","code":"findMarkersui(id)"},{"path":"https://cobriniklab.github.io/seuFLViz/reference/findMarkersui.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find Markers UI — findMarkersui","text":"id","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/find_all_markers.html","id":null,"dir":"Reference","previous_headings":"","what":"Find All Markers — find_all_markers","title":"Find All Markers — find_all_markers","text":"Find markers range resolutions","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/find_all_markers.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find All Markers — find_all_markers","text":"","code":"find_all_markers(seu, metavar = NULL, seurat_assay = \"gene\", ...)"},{"path":"https://cobriniklab.github.io/seuFLViz/reference/find_all_markers.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find All Markers — find_all_markers","text":"seu seurat object. metavar metadata variable group . seurat_assay Assay use, Default \"gene\". ...","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/find_all_markers.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Find All Markers — find_all_markers","text":"","code":"markers_stashed_seu <- find_all_markers(panc8) marker_genes <- Misc(markers_stashed_seu, \"markers\") str(marker_genes)"},{"path":"https://cobriniklab.github.io/seuFLViz/reference/flip_pseudotime.html","id":null,"dir":"Reference","previous_headings":"","what":"Flip Pseudotime — flip_pseudotime","title":"Flip Pseudotime — flip_pseudotime","text":"Flip Pseudotime","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/flip_pseudotime.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Flip Pseudotime — flip_pseudotime","text":"","code":"flip_pseudotime(cds)"},{"path":"https://cobriniklab.github.io/seuFLViz/reference/flip_pseudotime.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Flip Pseudotime — flip_pseudotime","text":"cds","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/format_new_metadata.html","id":null,"dir":"Reference","previous_headings":"","what":"Add Seurat Object Metadata — format_new_metadata","title":"Add Seurat Object Metadata — format_new_metadata","text":"Adds data seurat object produce seurat object metadata added.","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/format_new_metadata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add Seurat Object Metadata — format_new_metadata","text":"","code":"format_new_metadata(seu, datapath)"},{"path":"https://cobriniklab.github.io/seuFLViz/reference/format_new_metadata.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add Seurat Object Metadata — format_new_metadata","text":"seu seurat object datapath Path file containing metadata","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/format_pathway_table.html","id":null,"dir":"Reference","previous_headings":"","what":"Title — format_pathway_table","title":"Title — format_pathway_table","text":"Title","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/format_pathway_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Title — format_pathway_table","text":"","code":"format_pathway_table(enrich_by_cluster, enrich_cluster, enrich_db)"},{"path":"https://cobriniklab.github.io/seuFLViz/reference/format_pathway_table.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Title — format_pathway_table","text":"enrich_by_cluster","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/gene_test_plot.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Gene expression over pseudotime on reference and query trajectories from cellAlign — gene_test_plot","title":"Plot Gene expression over pseudotime on reference and query trajectories from cellAlign — gene_test_plot","text":"Plot Gene expression pseudotime reference query trajectories cellAlign","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/gene_test_plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Gene expression over pseudotime on reference and query trajectories from cellAlign — gene_test_plot","text":"","code":"gene_test_plot(   expGlobalRef,   expGlobalQuery,   trajRef,   trajQuery,   winSz = 0.1,   numPts = 200 )"},{"path":"https://cobriniklab.github.io/seuFLViz/reference/gene_test_plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Gene expression over pseudotime on reference and query trajectories from cellAlign — gene_test_plot","text":"numPts","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/genes_to_transcripts.html","id":null,"dir":"Reference","previous_headings":"","what":"Gene Symbols to Ensembl Transcript Ids — genes_to_transcripts","title":"Gene Symbols to Ensembl Transcript Ids — genes_to_transcripts","text":"convert hgnc gene symbols ensembl transcript ids","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/genes_to_transcripts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Gene Symbols to Ensembl Transcript Ids — genes_to_transcripts","text":"","code":"genes_to_transcripts(genes, organism = \"human\")"},{"path":"https://cobriniklab.github.io/seuFLViz/reference/genes_to_transcripts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Gene Symbols to Ensembl Transcript Ids — genes_to_transcripts","text":"genes","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/genes_to_transcripts.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Gene Symbols to Ensembl Transcript Ids — genes_to_transcripts","text":"","code":"genes_to_transcripts(\"RXRG\")"},{"path":"https://cobriniklab.github.io/seuFLViz/reference/getEnrichedPathways.html","id":null,"dir":"Reference","previous_headings":"","what":"Get enriched pathways based on marker genes from EnrichR. — getEnrichedPathways","title":"Get enriched pathways based on marker genes from EnrichR. — getEnrichedPathways","text":"function uses enrichR API look enriched pathways marker gene sets samples clusters.","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/getEnrichedPathways.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get enriched pathways based on marker genes from EnrichR. — getEnrichedPathways","text":"","code":"getEnrichedPathways(   object,   column_cluster = \"group\",   databases = c(\"GO_Biological_Process_2018\", \"GO_Cellular_Component_2018\",     \"GO_Molecular_Function_2018\", \"KEGG_2016\", \"WikiPathways_2016\", \"Reactome_2016\",     \"Panther_2016\", \"Human_Gene_Atlas\", \"Mouse_Gene_Atlas\"),   adj_p_cutoff = 0.05,   max_terms = 100,   URL_API = \"http://amp.pharm.mssm.edu/Enrichr/enrich\" )"},{"path":"https://cobriniklab.github.io/seuFLViz/reference/getEnrichedPathways.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get enriched pathways based on marker genes from EnrichR. — getEnrichedPathways","text":"object Seurat object. sample; defaults 'sample'. column_cluster Column object@meta.data contains information cluster; defaults 'cluster'. databases databases query. Use enrichR::listEnrichrDbs() check databases available. adj_p_cutoff Cut-adjusted p-value enriched pathways; defaults 0.05, max_terms Save first n entries database; defaults 100. URL_API URL send requests (Enrichr API). Allows overwrite default URL alternative taken Enrichr website case original --service; defaults 'http://amp.pharm.mssm.edu/Enrichr/enrich'.","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/getEnrichedPathways.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get enriched pathways based on marker genes from EnrichR. — getEnrichedPathways","text":"Seurat object Enrichr results samples clusters stored object@misc$enriched_pathways$enrichr","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/getEnrichedPathways.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get enriched pathways based on marker genes from EnrichR. — getEnrichedPathways","text":"Get enriched pathways based marker genes EnrichR.","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/getEnrichedPathways.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Get enriched pathways based on marker genes from EnrichR. — getEnrichedPathways","text":"Roman Hillje, modified Kevin Stachelek","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/getEnrichedPathways.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get enriched pathways based on marker genes from EnrichR. — getEnrichedPathways","text":"","code":"pbmc <- readRDS(system.file(\"extdata/v1.2/seurat_pbmc.rds\",     package = \"cerebroApp\" )) pbmc <- getEnrichedPathways(     object = pbmc,     column_sample = \"sample\",     column_cluster = \"seurat_clusters\",     databases = c(\"GO_Biological_Process_2018\", \"GO_Cellular_Component_2018\"),     adj_p_cutoff = 0.01,     max_terms = 100,     URL_API = \"http://amp.pharm.mssm.edu/Enrichr/enrich\" )"},{"path":"https://cobriniklab.github.io/seuFLViz/reference/get_meta.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Metadata for a project — get_meta","title":"Get Metadata for a project — get_meta","text":"Get Metadata project","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/get_meta.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Metadata for a project — get_meta","text":"","code":"get_meta(proj_path)"},{"path":"https://cobriniklab.github.io/seuFLViz/reference/get_meta.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Metadata for a project — get_meta","text":"proj_path","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/get_transcripts_from_seu.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Transcripts in Seurat Object — get_transcripts_from_seu","title":"Get Transcripts in Seurat Object — get_transcripts_from_seu","text":"Get transcript ids Seurat objects one gene interest","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/get_transcripts_from_seu.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Transcripts in Seurat Object — get_transcripts_from_seu","text":"","code":"get_transcripts_from_seu(seu, gene, organism = \"human\")"},{"path":"https://cobriniklab.github.io/seuFLViz/reference/get_transcripts_from_seu.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Transcripts in Seurat Object — get_transcripts_from_seu","text":"seu seurat object gene Gene intrest organism Organism","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/get_transcripts_from_seu.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get Transcripts in Seurat Object — get_transcripts_from_seu","text":"","code":"RXRG_transcripts <- get_transcripts_from_seu(human_gene_transcript_seu, \"RXRG\")"},{"path":"https://cobriniklab.github.io/seuFLViz/reference/global_cellalign.html","id":null,"dir":"Reference","previous_headings":"","what":"Global Alignment of two trajectories with cellAlign — global_cellalign","title":"Global Alignment of two trajectories with cellAlign — global_cellalign","text":"Global Alignment two trajectories cellAlign","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/global_cellalign.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Global Alignment of two trajectories with cellAlign — global_cellalign","text":"","code":"global_cellalign(exp_ref, exp_query, traj_ref, traj_query, numPts = 200)"},{"path":"https://cobriniklab.github.io/seuFLViz/reference/global_cellalign.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Global Alignment of two trajectories with cellAlign — global_cellalign","text":"traj_query","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/harmony_integrate.html","id":null,"dir":"Reference","previous_headings":"","what":"Integrate small datasets with harmony — harmony_integrate","title":"Integrate small datasets with harmony — harmony_integrate","text":"Integrate small datasets harmony","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/harmony_integrate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Integrate small datasets with harmony — harmony_integrate","text":"","code":"harmony_integrate(seu_list)"},{"path":"https://cobriniklab.github.io/seuFLViz/reference/harmony_integrate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Integrate small datasets with harmony — harmony_integrate","text":"seu_list List two seurat objects integrate","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/human_to_mouse_homologs.html","id":null,"dir":"Reference","previous_headings":"","what":"Gene Homologs Between Human and Mouse — human_to_mouse_homologs","title":"Gene Homologs Between Human and Mouse — human_to_mouse_homologs","text":"Homologs drawn Biomart","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/human_to_mouse_homologs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Gene Homologs Between Human and Mouse — human_to_mouse_homologs","text":"","code":"human_to_mouse_homologs"},{"path":"https://cobriniklab.github.io/seuFLViz/reference/human_to_mouse_homologs.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Gene Homologs Between Human and Mouse — human_to_mouse_homologs","text":"data frame 23188 rows 2 columns HGNC.symbol human gene symbols MGI.symbol mouse gene symbols","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/human_to_mouse_homologs.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Gene Homologs Between Human and Mouse — human_to_mouse_homologs","text":"bioMart","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/integrateProj.html","id":null,"dir":"Reference","previous_headings":"","what":"Integrate Projects Server Function — integrateProj","title":"Integrate Projects Server Function — integrateProj","text":"Integrate Projects Server Function","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/integrateProj.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Integrate Projects Server Function — integrateProj","text":"","code":"integrateProj(input, output, session, proj_matrices, seu, proj_dir, con)"},{"path":"https://cobriniklab.github.io/seuFLViz/reference/integrateProj.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Integrate Projects Server Function — integrateProj","text":"session","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/integrateProjui.html","id":null,"dir":"Reference","previous_headings":"","what":"Integrate Project UI — integrateProjui","title":"Integrate Project UI — integrateProjui","text":"Integrate Project UI","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/integrateProjui.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Integrate Project UI — integrateProjui","text":"","code":"integrateProjui(id)"},{"path":"https://cobriniklab.github.io/seuFLViz/reference/integrateProjui.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Integrate Project UI — integrateProjui","text":"id","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/integration_workflow.html","id":null,"dir":"Reference","previous_headings":"","what":"Integration Workflow — integration_workflow","title":"Integration Workflow — integration_workflow","text":"Integrate multiple seurat objects save file","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/integration_workflow.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Integration Workflow — integration_workflow","text":"","code":"integration_workflow(   batches,   excluded_cells = NULL,   resolution = seq(0.2, 2, by = 0.2),   experiment_name = \"default_experiment\",   organism = \"human\",   ... )"},{"path":"https://cobriniklab.github.io/seuFLViz/reference/integration_workflow.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Integration Workflow — integration_workflow","text":"batches seurat objects batches provided list. named, resulting integrated object identified corresponding values 'batch' metadata excluded_cells named list cells exclude resolution value(s) control clustering resolution via Seurat::FindMarkers experiment_name arbitrary name identify experiment organism either \"human\" \"mouse\" ...","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/integration_workflow.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Integration Workflow — integration_workflow","text":"","code":"batches <- panc8 %>%     Seurat::SplitObject(split.by = \"tech\")  integrated_seu <- integration_workflow(batches)"},{"path":"https://cobriniklab.github.io/seuFLViz/reference/label_transfer.html","id":null,"dir":"Reference","previous_headings":"","what":"Transfer Labels Between Seurat Objects — label_transfer","title":"Transfer Labels Between Seurat Objects — label_transfer","text":"Transfer Labels Seurat Objects","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/label_transfer.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Transfer Labels Between Seurat Objects — label_transfer","text":"","code":"label_transfer(ref_seu, query_seu, ref_name = NULL, query_name = NULL, ...)"},{"path":"https://cobriniklab.github.io/seuFLViz/reference/label_transfer.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Transfer Labels Between Seurat Objects — label_transfer","text":"...","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/learn_graph_by_resolution.html","id":null,"dir":"Reference","previous_headings":"","what":"Learn Monocle Graph by Resolution — learn_graph_by_resolution","title":"Learn Monocle Graph by Resolution — learn_graph_by_resolution","text":"Learn Monocle Graph Resolution","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/learn_graph_by_resolution.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Learn Monocle Graph by Resolution — learn_graph_by_resolution","text":"","code":"learn_graph_by_resolution(cds, seu, resolution = 1)"},{"path":"https://cobriniklab.github.io/seuFLViz/reference/learn_graph_by_resolution.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Learn Monocle Graph by Resolution — learn_graph_by_resolution","text":"resolution","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/list_plot_types.html","id":null,"dir":"Reference","previous_headings":"","what":"Collate list of variables to be plotted — list_plot_types","title":"Collate list of variables to be plotted — list_plot_types","text":"Collate list variables plotted","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/list_plot_types.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Collate list of variables to be plotted — list_plot_types","text":"","code":"list_plot_types(seu)"},{"path":"https://cobriniklab.github.io/seuFLViz/reference/list_plot_types.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Collate list of variables to be plotted — list_plot_types","text":"seu Seurat object","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/list_plot_types.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Collate list of variables to be plotted — list_plot_types","text":"plot_types","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/load_bigwigs.html","id":null,"dir":"Reference","previous_headings":"","what":"Load Bigwigs — load_bigwigs","title":"Load Bigwigs — load_bigwigs","text":"Load tibble bigwig file paths cell id","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/load_bigwigs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load Bigwigs — load_bigwigs","text":"","code":"load_bigwigs(seu, bigwig_db = \"~/.cache/seuFLViz/bw-files.db\")"},{"path":"https://cobriniklab.github.io/seuFLViz/reference/load_bigwigs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load Bigwigs — load_bigwigs","text":"seu seurat object bigwig_db Sqlite database bigwig files","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/load_counts_by_tximport.html","id":null,"dir":"Reference","previous_headings":"","what":"Run tximport on a set of cells — load_counts_by_tximport","title":"Run tximport on a set of cells — load_counts_by_tximport","text":"cells can quantified using: stringtie salmon","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/load_counts_by_tximport.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run tximport on a set of cells — load_counts_by_tximport","text":"","code":"load_counts_by_tximport(   proj_dir,   type = \"salmon\",   countsFromAbundance = \"scaledTPM\",   edb = EnsDb.Hsapiens.v86::EnsDb.Hsapiens.v86 )"},{"path":"https://cobriniklab.github.io/seuFLViz/reference/load_counts_by_tximport.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run tximport on a set of cells — load_counts_by_tximport","text":"proj_dir project directory type stringtie salmon countsFromAbundance argument provided tximport edb","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/load_meta.html","id":null,"dir":"Reference","previous_headings":"","what":"Load Sample Metadata for a given project — load_meta","title":"Load Sample Metadata for a given project — load_meta","text":"Load Sample Metadata given project","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/load_meta.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load Sample Metadata for a given project — load_meta","text":"","code":"load_meta(proj_dir)"},{"path":"https://cobriniklab.github.io/seuFLViz/reference/load_meta.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load Sample Metadata for a given project — load_meta","text":"proj_dir","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/load_seurat_from_proj.html","id":null,"dir":"Reference","previous_headings":"","what":"Load Seurat Files from a single project path — load_seurat_from_proj","title":"Load Seurat Files from a single project path — load_seurat_from_proj","text":"Load Seurat Files single project path","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/load_seurat_from_proj.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load Seurat Files from a single project path — load_seurat_from_proj","text":"","code":"load_seurat_from_proj(proj_dir, ...)"},{"path":"https://cobriniklab.github.io/seuFLViz/reference/load_seurat_from_proj.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load Seurat Files from a single project path — load_seurat_from_proj","text":"proj_dir Path project ...","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/load_seurat_path.html","id":null,"dir":"Reference","previous_headings":"","what":"Read in Gene and Transcript Seurat Objects — load_seurat_path","title":"Read in Gene and Transcript Seurat Objects — load_seurat_path","text":"Read Gene Transcript Seurat Objects","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/load_seurat_path.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read in Gene and Transcript Seurat Objects — load_seurat_path","text":"","code":"load_seurat_path(proj_dir = getwd(), prefix = \"unfiltered\")"},{"path":"https://cobriniklab.github.io/seuFLViz/reference/load_seurat_path.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read in Gene and Transcript Seurat Objects — load_seurat_path","text":"proj_dir path project directory prefix default \"unfiltered\"","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/local_cellalign.html","id":null,"dir":"Reference","previous_headings":"","what":"Align two trajectories via cellalign — local_cellalign","title":"Align two trajectories via cellalign — local_cellalign","text":"cell align","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/local_cellalign.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Align two trajectories via cellalign — local_cellalign","text":"","code":"local_cellalign(   exp_ref,   exp_query,   traj_ref,   traj_query,   Thresh = 0.2,   winSz = 0.1,   numPts = 200 )"},{"path":"https://cobriniklab.github.io/seuFLViz/reference/local_cellalign.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Align two trajectories via cellalign — local_cellalign","text":"numPts","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/make_bigwig_db.html","id":null,"dir":"Reference","previous_headings":"","what":"Make Bigwig Database — make_bigwig_db","title":"Make Bigwig Database — make_bigwig_db","text":"Build database containg bigwig files","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/make_bigwig_db.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make Bigwig Database — make_bigwig_db","text":"","code":"make_bigwig_db(   new_project = NULL,   cache_location = \"~/.cache/seuFLViz/\",   sqlite_db = \"bw-files.db\" )"},{"path":"https://cobriniklab.github.io/seuFLViz/reference/make_bigwig_db.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make Bigwig Database — make_bigwig_db","text":"new_project Project directory cache_location Path cache \"~/.cache/seuFLViz\" sqlite_db sqlite db containing bw files","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/make_chevreul_clean_names.html","id":null,"dir":"Reference","previous_headings":"","what":"Title — make_seuFLViz_clean_names","title":"Title — make_seuFLViz_clean_names","text":"Title","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/make_chevreul_clean_names.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Title — make_seuFLViz_clean_names","text":"","code":"make_seuFLViz_clean_names(myvec)"},{"path":"https://cobriniklab.github.io/seuFLViz/reference/make_chevreul_clean_names.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Title — make_seuFLViz_clean_names","text":"myvec","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/make_seuFLViz_clean_names.html","id":null,"dir":"Reference","previous_headings":"","what":"Clean Vector of seuFLViz Names — make_seuFLViz_clean_names","title":"Clean Vector of seuFLViz Names — make_seuFLViz_clean_names","text":"Cleans names seurat objects provided vector form","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/make_seuFLViz_clean_names.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Clean Vector of seuFLViz Names — make_seuFLViz_clean_names","text":"","code":"make_seuFLViz_clean_names(myvec)"},{"path":"https://cobriniklab.github.io/seuFLViz/reference/make_seuFLViz_clean_names.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Clean Vector of seuFLViz Names — make_seuFLViz_clean_names","text":"myvec vector seurat object names","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/mem_str.html","id":null,"dir":"Reference","previous_headings":"","what":"Profile the memory of an s4object — mem_str","title":"Profile the memory of an s4object — mem_str","text":"Profile memory s4object","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/mem_str.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Profile the memory of an s4object — mem_str","text":"","code":"mem_str(s4object)"},{"path":"https://cobriniklab.github.io/seuFLViz/reference/mem_str.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Profile the memory of an s4object — mem_str","text":"s4object","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/merge_loom.html","id":null,"dir":"Reference","previous_headings":"","what":"scvelo_assay — merge_loom","title":"scvelo_assay — merge_loom","text":"run scvelo gene transcript level object","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/merge_loom.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"scvelo_assay — merge_loom","text":"","code":"merge_loom(   object,   loom_path,   assay = \"gene\",   fit.quantile = 0.05,   check_loom = FALSE )"},{"path":"https://cobriniklab.github.io/seuFLViz/reference/merge_loom.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"scvelo_assay — merge_loom","text":"object object loom_path path matching loom file assay gene fit.quantile fit velocity check_loom FALSE","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/merge_loom.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"scvelo_assay — merge_loom","text":"SingleCellExperiment object RNA velocity calculated","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/merge_loom.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"scvelo_assay — merge_loom","text":"","code":"# \\donttest{ chevreul_sce <- chevreuldata::human_gene_transcript_sce() merge_loom(chevreul_sce, \"my.loom\") # }"},{"path":"https://cobriniklab.github.io/seuFLViz/reference/merge_small_seus.html","id":null,"dir":"Reference","previous_headings":"","what":"Merge Small Seurat Objects — merge_small_seus","title":"Merge Small Seurat Objects — merge_small_seus","text":"Merge Small Seurat Objects","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/merge_small_seus.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Merge Small Seurat Objects — merge_small_seus","text":"","code":"merge_small_seus(seu_list, k.filter = 50)"},{"path":"https://cobriniklab.github.io/seuFLViz/reference/merge_small_seus.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Merge Small Seurat Objects — merge_small_seus","text":"seu_list List two seurat objects","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/metadata_from_batch.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve Metadata from Batch — metadata_from_batch","title":"Retrieve Metadata from Batch — metadata_from_batch","text":"Retrieve Metadata Batch","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/metadata_from_batch.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve Metadata from Batch — metadata_from_batch","text":"","code":"metadata_from_batch(   batch,   projects_dir = \"/dataVolume/storage/single_cell_projects\",   db_path = \"single-cell-projects.db\" )"},{"path":"https://cobriniklab.github.io/seuFLViz/reference/metadata_from_batch.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve Metadata from Batch — metadata_from_batch","text":"batch Batch projects_dir path project dir db_path path .db file","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/minimalSeuratApp.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a minimal seurat app — minimalSeuratApp","title":"Create a minimal seurat app — minimalSeuratApp","text":"Create minimal seurat app","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/minimalSeuratApp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a minimal seurat app — minimalSeuratApp","text":"","code":"minimalSeuratApp(   object = panc8,   loom_path = NULL,   appTitle = NULL,   organism_type = \"human\",   futureMb = 13000,   bigwig_db = \"~/.cache/seuFLViz/bw-files.db\" )"},{"path":"https://cobriniklab.github.io/seuFLViz/reference/minimalSeuratApp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a minimal seurat app — minimalSeuratApp","text":"object seurat object loom_path path loom file organism_type Organism futureMb","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/minimalSeuratApp.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a minimal seurat app — minimalSeuratApp","text":"","code":"if (FALSE) { minimalSeuratApp(panc8) }"},{"path":"https://cobriniklab.github.io/seuFLViz/reference/monocle.html","id":null,"dir":"Reference","previous_headings":"","what":"Monocle Server Module — monocle","title":"Monocle Server Module — monocle","text":"Monocle Server Module","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/monocle.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Monocle Server Module — monocle","text":"","code":"monocle(   input,   output,   session,   seu,   plot_types,   featureType,   organism_type,   reductions )"},{"path":"https://cobriniklab.github.io/seuFLViz/reference/monocle.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Monocle Server Module — monocle","text":"resolution","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/monocle_module_heatmap.html","id":null,"dir":"Reference","previous_headings":"","what":"Title — monocle_module_heatmap","title":"Title — monocle_module_heatmap","text":"Title","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/monocle_module_heatmap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Title — monocle_module_heatmap","text":"","code":"monocle_module_heatmap(   cds,   pr_deg_ids,   seu_resolution,   cells = NULL,   collapse_rows = TRUE,   resolution = 10^seq(-6, -1),   group.by = \"batch\",   group.bar.height = 0.01,   cluster_columns = FALSE,   cluster_rows = TRUE,   column_split = NULL,   col_dendrogram = \"ward.D2\",   mm_col_dend = 30,   min_percent = 0.05,   ... )"},{"path":"https://cobriniklab.github.io/seuFLViz/reference/monocle_module_heatmap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Title — monocle_module_heatmap","text":"...","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/monocleui.html","id":null,"dir":"Reference","previous_headings":"","what":"Monocle UI Module — monocleui","title":"Monocle UI Module — monocleui","text":"Monocle UI Module","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/monocleui.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Monocle UI Module — monocleui","text":"","code":"monocleui(id)"},{"path":"https://cobriniklab.github.io/seuFLViz/reference/monocleui.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Monocle UI Module — monocleui","text":"id","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/nil.html","id":null,"dir":"Reference","previous_headings":"","what":"nil operator — %||%","title":"nil operator — %||%","text":"Set default value object null See rlang::%||% details.","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/nil.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"nil operator — %||%","text":"","code":"lhs %||% rhs"},{"path":"https://cobriniklab.github.io/seuFLViz/reference/pad_sample_files.html","id":null,"dir":"Reference","previous_headings":"","what":"pad sample numbers to prep for armor — pad_sample_files","title":"pad sample numbers to prep for armor — pad_sample_files","text":"pad sample numbers prep armor","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/pad_sample_files.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"pad sample numbers to prep for armor — pad_sample_files","text":"","code":"pad_sample_files(proj_dir)"},{"path":"https://cobriniklab.github.io/seuFLViz/reference/pad_sample_files.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"pad sample numbers to prep for armor — pad_sample_files","text":"proj_dir","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/pathwayEnrichment.html","id":null,"dir":"Reference","previous_headings":"","what":"pathway enrichment — pathwayEnrichment","title":"pathway enrichment — pathwayEnrichment","text":"pathway enrichment","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/pathwayEnrichment.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"pathway enrichment — pathwayEnrichment","text":"","code":"pathwayEnrichment(input, output, session, seu)"},{"path":"https://cobriniklab.github.io/seuFLViz/reference/pathwayEnrichment.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"pathway enrichment — pathwayEnrichment","text":"session","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/pathwayEnrichmentui.html","id":null,"dir":"Reference","previous_headings":"","what":"Title — pathwayEnrichmentui","title":"Title — pathwayEnrichmentui","text":"Title","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/pathwayEnrichmentui.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Title — pathwayEnrichmentui","text":"","code":"pathwayEnrichmentui(id)"},{"path":"https://cobriniklab.github.io/seuFLViz/reference/pathwayEnrichmentui.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Title — pathwayEnrichmentui","text":"id","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe operator — %>%","title":"Pipe operator — %>%","text":"See magrittr::%>% details.","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/pipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pipe operator — %>%","text":"","code":"lhs %>% rhs"},{"path":"https://cobriniklab.github.io/seuFLViz/reference/plotClustree.html","id":null,"dir":"Reference","previous_headings":"","what":"plot clustree server — plotClustree","title":"plot clustree server — plotClustree","text":"plot clustree server","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/plotClustree.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"plot clustree server — plotClustree","text":"","code":"plotClustree(input, output, session, seu)"},{"path":"https://cobriniklab.github.io/seuFLViz/reference/plotClustree.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"plot clustree server — plotClustree","text":"seu Seurat object","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/plotClustree_UI.html","id":null,"dir":"Reference","previous_headings":"","what":"plot clustree ui — plotClustree_UI","title":"plot clustree ui — plotClustree_UI","text":"plot clustree ui","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/plotClustree_UI.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"plot clustree ui — plotClustree_UI","text":"","code":"plotClustree_UI(id)"},{"path":"https://cobriniklab.github.io/seuFLViz/reference/plotClustree_UI.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"plot clustree ui — plotClustree_UI","text":"id","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/plotCoverage.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Coverage Module — plotCoverage","title":"Plot Coverage Module — plotCoverage","text":"Plot Coverage Module","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/plotCoverage.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Coverage Module — plotCoverage","text":"","code":"plotCoverage(   input,   output,   session,   seu,   plot_types,   proj_dir,   organism_type = \"human\",   bigwig_db = \"~/.cache/seuFLViz/bw-files.db\" )"},{"path":"https://cobriniklab.github.io/seuFLViz/reference/plotCoverage.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Coverage Module — plotCoverage","text":"organism_type","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/plotCoverage_UI.html","id":null,"dir":"Reference","previous_headings":"","what":"Title — plotCoverage_UI","title":"Title — plotCoverage_UI","text":"Title","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/plotCoverage_UI.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Title — plotCoverage_UI","text":"","code":"plotCoverage_UI(id)"},{"path":"https://cobriniklab.github.io/seuFLViz/reference/plotCoverage_UI.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Title — plotCoverage_UI","text":"id","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/plotDimRed.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Dimensional Reduduction — plotDimRed","title":"Plot Dimensional Reduduction — plotDimRed","text":"Plot Dimensional Reduduction","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/plotDimRed.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Dimensional Reduduction — plotDimRed","text":"","code":"plotDimRed(   input,   output,   session,   seu,   plot_types,   featureType,   organism_type,   reductions )"},{"path":"https://cobriniklab.github.io/seuFLViz/reference/plotDimRed.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Dimensional Reduduction — plotDimRed","text":"reductions","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/plotDimRedui.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Dimensional Reduduction UI — plotDimRedui","title":"Plot Dimensional Reduduction UI — plotDimRedui","text":"Plot Dimensional Reduduction UI","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/plotDimRedui.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Dimensional Reduduction UI — plotDimRedui","text":"","code":"plotDimRedui(id)"},{"path":"https://cobriniklab.github.io/seuFLViz/reference/plotDimRedui.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Dimensional Reduduction UI — plotDimRedui","text":"id","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/plotHeatmap.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Heatmap — plotHeatmap","title":"Plot Heatmap — plotHeatmap","text":"Plot Heatmap","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/plotHeatmap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Heatmap — plotHeatmap","text":"","code":"plotHeatmap(input, output, session, seu, featureType, organism_type)"},{"path":"https://cobriniklab.github.io/seuFLViz/reference/plotHeatmap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Heatmap — plotHeatmap","text":"organism_type","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/plotHeatmapui.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Heatmap ui — plotHeatmapui","title":"Plot Heatmap ui — plotHeatmapui","text":"Plot Heatmap ui","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/plotHeatmapui.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Heatmap ui — plotHeatmapui","text":"","code":"plotHeatmapui(id)"},{"path":"https://cobriniklab.github.io/seuFLViz/reference/plotHeatmapui.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Heatmap ui — plotHeatmapui","text":"id","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/plotReadCount.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Read Count — plotReadCount","title":"Plot Read Count — plotReadCount","text":"Plot Read Count","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/plotReadCount.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Read Count — plotReadCount","text":"","code":"plotReadCount(input, output, session, seu, plot_types)"},{"path":"https://cobriniklab.github.io/seuFLViz/reference/plotReadCount.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Read Count — plotReadCount","text":"plot_types","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/plotReadCountui.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Read Count UI — plotReadCountui","title":"Plot Read Count UI — plotReadCountui","text":"Plot Read Count UI","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/plotReadCountui.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Read Count UI — plotReadCountui","text":"","code":"plotReadCountui(id)"},{"path":"https://cobriniklab.github.io/seuFLViz/reference/plotReadCountui.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Read Count UI — plotReadCountui","text":"plot_types","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/plotVelocity.html","id":null,"dir":"Reference","previous_headings":"","what":"RNA Velocity Server Module — plotVelocity","title":"RNA Velocity Server Module — plotVelocity","text":"RNA Velocity Server Module","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/plotVelocity.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"RNA Velocity Server Module — plotVelocity","text":"","code":"plotVelocity(input, output, session, seu, loom_path)"},{"path":"https://cobriniklab.github.io/seuFLViz/reference/plotVelocity.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"RNA Velocity Server Module — plotVelocity","text":"loom_path","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/plotVelocityui.html","id":null,"dir":"Reference","previous_headings":"","what":"RNA Velocity UI Module — plotVelocityui","title":"RNA Velocity UI Module — plotVelocityui","text":"RNA Velocity UI Module","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/plotVelocityui.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"RNA Velocity UI Module — plotVelocityui","text":"","code":"plotVelocityui(id)"},{"path":"https://cobriniklab.github.io/seuFLViz/reference/plotVelocityui.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"RNA Velocity UI Module — plotVelocityui","text":"id","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/plotViolin.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Violin Server — plotViolin","title":"Plot Violin Server — plotViolin","text":"Plots Violin plot single data (gene expression, metrics, etc.) server Seurat app.","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/plotViolin.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Violin Server — plotViolin","text":"","code":"plotViolin(input, output, session, seu, featureType, organism_type)"},{"path":"https://cobriniklab.github.io/seuFLViz/reference/plotViolin.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Violin Server — plotViolin","text":"seu Seurat object featureType Gene Transcript organism_type Organism","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/plotViolinui.html","id":null,"dir":"Reference","previous_headings":"","what":"Title — plotViolinui","title":"Title — plotViolinui","text":"Title","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/plotViolinui.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Title — plotViolinui","text":"","code":"plotViolinui(id)"},{"path":"https://cobriniklab.github.io/seuFLViz/reference/plotViolinui.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Title — plotViolinui","text":"id","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/plot_all_ptimes.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot a Set of Heatmaps Based on a provided pseudotime — plot_all_ptimes","title":"Plot a Set of Heatmaps Based on a provided pseudotime — plot_all_ptimes","text":"Plot Set Heatmaps Based provided pseudotime","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/plot_all_ptimes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot a Set of Heatmaps Based on a provided pseudotime — plot_all_ptimes","text":"","code":"plot_all_ptimes(monocle_list, query_name, sig_slice = 1000, ...)"},{"path":"https://cobriniklab.github.io/seuFLViz/reference/plot_all_ptimes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot a Set of Heatmaps Based on a provided pseudotime — plot_all_ptimes","text":"...","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/plot_all_transcripts.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot All Transcripts — plot_all_transcripts","title":"Plot All Transcripts — plot_all_transcripts","text":"plot expression transcripts input gene superimposed embedding","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/plot_all_transcripts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot All Transcripts — plot_all_transcripts","text":"","code":"plot_all_transcripts(   seu,   features,   embedding = \"umap\",   from_gene = TRUE,   combine = TRUE )"},{"path":"https://cobriniklab.github.io/seuFLViz/reference/plot_all_transcripts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot All Transcripts — plot_all_transcripts","text":"seu seurat object features gene vector transcripts embedding umap from_gene whether look transcripts input gene","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/plot_all_transcripts.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot All Transcripts — plot_all_transcripts","text":"","code":"processed_seu <- clustering_workflow(human_gene_transcript_seu) transcripts_to_plot <- genes_to_transcripts(\"RXRG\") plot_all_transcripts(processed_seu, features = transcripts_to_plot)"},{"path":"https://cobriniklab.github.io/seuFLViz/reference/plot_cds.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot a Monocle Cell Data Set — plot_cds","title":"Plot a Monocle Cell Data Set — plot_cds","text":"Plot Monocle Cell Data Set","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/plot_cds.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot a Monocle Cell Data Set — plot_cds","text":"","code":"plot_cds(cds, color_cells_by = NULL, genes = NULL, return_plotly = TRUE)"},{"path":"https://cobriniklab.github.io/seuFLViz/reference/plot_cds.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot a Monocle Cell Data Set — plot_cds","text":"color_cells_by","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/plot_cell_cycle_distribution.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot cell cycle distribution grouped by metadata — plot_cell_cycle_distribution","title":"Plot cell cycle distribution grouped by metadata — plot_cell_cycle_distribution","text":"Plot ridge plots G1, S, G2M phases grouped provided metadata","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/plot_cell_cycle_distribution.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot cell cycle distribution grouped by metadata — plot_cell_cycle_distribution","text":"","code":"plot_cell_cycle_distribution(seu, features)"},{"path":"https://cobriniklab.github.io/seuFLViz/reference/plot_cell_cycle_distribution.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot cell cycle distribution grouped by metadata — plot_cell_cycle_distribution","text":"seu seurat object features Features plot (gene expression, metrics, PC scores, anything can retreived Seurat::FetchData)","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/plot_cells.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot cells of a monocle cell data set — plot_cells","title":"Plot cells of a monocle cell data set — plot_cells","text":"Plot cells monocle cell data set","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/plot_cells.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot cells of a monocle cell data set — plot_cells","text":"","code":"plot_cells(   cds,   x = 1,   y = 2,   reduction_method = c(\"UMAP\", \"tSNE\", \"PCA\", \"LSI\", \"Aligned\"),   color_cells_by = \"cluster\",   group_cells_by = c(\"cluster\", \"partition\"),   genes = NULL,   show_trajectory_graph = TRUE,   trajectory_graph_color = \"grey28\",   trajectory_graph_segment_size = 0.75,   norm_method = c(\"log\", \"size_only\"),   label_cell_groups = TRUE,   label_groups_by_cluster = TRUE,   group_label_size = 2,   labels_per_group = 1,   label_branch_points = TRUE,   label_roots = TRUE,   label_leaves = TRUE,   graph_label_size = 2,   cell_size = 0.35,   cell_stroke = I(cell_size/2),   alpha = 1,   min_expr = 0.1,   rasterize = FALSE,   scale_to_range = FALSE,   ... )"},{"path":"https://cobriniklab.github.io/seuFLViz/reference/plot_cells.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot cells of a monocle cell data set — plot_cells","text":"...","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/plot_feature.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Feature — plot_feature","title":"Plot Feature — plot_feature","text":"Plots gene transcript expression overlaid given embedding. multiple features supplied joint density features plotted using Nebulosa","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/plot_feature.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Feature — plot_feature","text":"","code":"plot_feature(   seu,   embedding = c(\"umap\", \"pca\", \"tsne\"),   features,   dims = c(1, 2),   return_plotly = FALSE,   pt.size = 1 )"},{"path":"https://cobriniklab.github.io/seuFLViz/reference/plot_feature.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Feature — plot_feature","text":"seu Seurat object embedding Dimensional reduction technique used features Features plot dims Dimensions plot, must two-length numeric vector","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/plot_feature.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot Feature — plot_feature","text":"","code":"# static, single feature plot_feature(human_gene_transcript_seu, embedding = \"umap\", features = c(\"NRL\"), return_plotly = FALSE) # static, multi-feature plot_feature(human_gene_transcript_seu, embedding = \"umap\", features = c(\"RXRG\", \"NRL\"), return_plotly = FALSE) # interactive, multi-feature plotly_plot <- plot_feature(human_gene_transcript_seu, embedding = \"umap\", features = c(\"RXRG\", \"NRL\")) print(plotly_plot)"},{"path":"https://cobriniklab.github.io/seuFLViz/reference/plot_feature_in_ref_query_ptime.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Expression of a Given Feature of a set of Pseudotimes — plot_feature_in_ref_query_ptime","title":"Plot Expression of a Given Feature of a set of Pseudotimes — plot_feature_in_ref_query_ptime","text":"Plot Expression Given Feature set Pseudotimes","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/plot_feature_in_ref_query_ptime.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Expression of a Given Feature of a set of Pseudotimes — plot_feature_in_ref_query_ptime","text":"","code":"plot_feature_in_ref_query_ptime(   cds_list,   selected_cds,   features = c(\"RXRG\"),   color_by = \"State\",   relative_expr = FALSE,   min_expr = 0.5,   trend_df = 3,   ... )"},{"path":"https://cobriniklab.github.io/seuFLViz/reference/plot_feature_in_ref_query_ptime.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Expression of a Given Feature of a set of Pseudotimes — plot_feature_in_ref_query_ptime","text":"min_expr","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/plot_gene_coverage_by_var.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot BigWig Coverage for Genes of Interest by a Given Variable — plot_gene_coverage_by_var","title":"Plot BigWig Coverage for Genes of Interest by a Given Variable — plot_gene_coverage_by_var","text":"Plot BigWig coverage genes interest colored given variable","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/plot_gene_coverage_by_var.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot BigWig Coverage for Genes of Interest by a Given Variable — plot_gene_coverage_by_var","text":"","code":"plot_gene_coverage_by_var(   genes_of_interest = \"RXRG\",   cell_metadata,   bigwig_tbl,   var_of_interest = \"batch\",   values_of_interest = NULL,   organism = \"human\",   edb = NULL,   heights = c(3, 1),   scale_y = \"log10\",   reverse_x = FALSE,   start = NULL,   end = NULL,   summarize_transcripts = FALSE,   ... )"},{"path":"https://cobriniklab.github.io/seuFLViz/reference/plot_gene_coverage_by_var.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot BigWig Coverage for Genes of Interest by a Given Variable — plot_gene_coverage_by_var","text":"genes_of_interest Gene interest cell_metadata dataframe cell metadata seurat bigwig_tbl tibble colnames \"name\", \"bigWig\", \"sample_id\" matching filename, absolute path, sample name cell cell_metadata var_of_interest Variable color organism Organism edb ensembldb object heights heights row grid plot ...","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/plot_markers.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Cluster Marker Genes — plot_markers","title":"Plot Cluster Marker Genes — plot_markers","text":"Plot dot plot n marker features grouped cell metadata available methods wilcoxon rank-sum test implemented presto specificity scores implemented genesorteR","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/plot_markers.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Cluster Marker Genes — plot_markers","text":"","code":"plot_markers(   seu,   metavar = \"batch\",   num_markers = 5,   selected_values = NULL,   return_plotly = FALSE,   marker_method = \"presto\",   seurat_assay = \"gene\",   hide_technical = NULL,   unique_markers = FALSE,   p_val_cutoff = 1,   ... )"},{"path":"https://cobriniklab.github.io/seuFLViz/reference/plot_markers.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Cluster Marker Genes — plot_markers","text":"seu seurat object metavar metadata variable pick clusters num_markers default 5 return_plotly whether return interactive ploly plot marker_method either \"presto\" \"genesorteR\" hide_technical whether exclude mitochondrial ribosomal genes ...","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/plot_markers.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot Cluster Marker Genes — plot_markers","text":"","code":"# interactive mode using \"presto\" plot_markers(human_gene_transcript_seu, metavar = \"tech\", marker_method = \"presto\", return_plotly = TRUE)  # static mode using \"presto\" plot_markers(human_gene_transcript_seu, metavar = \"tech\", marker_method = \"genesorteR\", return_plotly = FALSE)"},{"path":"https://cobriniklab.github.io/seuFLViz/reference/plot_monocle_features.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot feature expression on a Monocle Cell Data Set — plot_monocle_features","title":"Plot feature expression on a Monocle Cell Data Set — plot_monocle_features","text":"Plot feature expression Monocle Cell Data Set","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/plot_monocle_features.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot feature expression on a Monocle Cell Data Set — plot_monocle_features","text":"","code":"plot_monocle_features(cds, resolution, genes = NULL, ...)"},{"path":"https://cobriniklab.github.io/seuFLViz/reference/plot_monocle_features.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot feature expression on a Monocle Cell Data Set — plot_monocle_features","text":"resolution","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/plot_multiple_branches_heatmap.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot monocle pseudotime over multiple branches — plot_multiple_branches_heatmap","title":"Plot monocle pseudotime over multiple branches — plot_multiple_branches_heatmap","text":"Plots heatmap de","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/plot_multiple_branches_heatmap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot monocle pseudotime over multiple branches — plot_multiple_branches_heatmap","text":"","code":"plot_multiple_branches_heatmap(   cds,   branches,   branches_name = NULL,   cluster_rows = TRUE,   hclust_method = \"ward.D2\",   num_clusters = 6,   hmcols = NULL,   add_annotation_row = NULL,   add_annotation_col = NULL,   show_rownames = FALSE,   use_gene_short_name = TRUE,   norm_method = c(\"vstExprs\", \"log\"),   scale_max = 3,   scale_min = -3,   trend_formula = \"~sm.ns(Pseudotime, df=3)\",   return_heatmap = FALSE,   cores = 1 )"},{"path":"https://cobriniklab.github.io/seuFLViz/reference/plot_multiple_branches_heatmap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot monocle pseudotime over multiple branches — plot_multiple_branches_heatmap","text":"cds CellDataSet experiment branches terminal branches developmental tree investigated. cores","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/plot_pseudotime.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot pseudotime on a Monocle Cell Data Set — plot_pseudotime","title":"Plot pseudotime on a Monocle Cell Data Set — plot_pseudotime","text":"Plot pseudotime Monocle Cell Data Set","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/plot_pseudotime.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot pseudotime on a Monocle Cell Data Set — plot_pseudotime","text":"","code":"plot_pseudotime(cds, resolution, color_cells_by = NULL, genes = NULL)"},{"path":"https://cobriniklab.github.io/seuFLViz/reference/plot_pseudotime.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot pseudotime on a Monocle Cell Data Set — plot_pseudotime","text":"color_cells_by","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/plot_pseudotime_heatmap.html","id":null,"dir":"Reference","previous_headings":"","what":"plot pseudotime heatmap — plot_pseudotime_heatmap","title":"plot pseudotime heatmap — plot_pseudotime_heatmap","text":"plot pseudotime heatmap","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/plot_pseudotime_heatmap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"plot pseudotime heatmap — plot_pseudotime_heatmap","text":"","code":"plot_pseudotime_heatmap(   heatmap_matrix,   heatmap_title,   dend_k = 6,   cluster_rows = T,   query_set = T,   hmcols = NULL,   seriation = F,   row_font = 4,   heatmap_height = 96,   heatmap_width = 8 )"},{"path":"https://cobriniklab.github.io/seuFLViz/reference/plot_pseudotime_heatmap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"plot pseudotime heatmap — plot_pseudotime_heatmap","text":"heatmap_width","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/plot_readcount.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Read Count — plot_readcount","title":"Plot Read Count — plot_readcount","text":"Draw box plot read count data metadata variable","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/plot_readcount.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Read Count — plot_readcount","text":"","code":"plot_readcount(   seu,   metavar = \"nCount_RNA\",   color.by = \"batch\",   yscale = \"linear\",   return_plotly = FALSE,   ... )"},{"path":"https://cobriniklab.github.io/seuFLViz/reference/plot_readcount.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Read Count — plot_readcount","text":"seu seurat object metavar Metadata variable plot. Default set \"nCount_RNA\" color.Variable color bins . Default set \"batch\" yscale Scale y axis. Default set \"linear\" return_plotly whether return interactive ploly plot. Default set FALSE","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/plot_readcount.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot Read Count — plot_readcount","text":"","code":"# interactive plotly plot_readcount(human_gene_transcript_seu, return_plotly = TRUE) # static plot plot_readcount(human_gene_transcript_seu, return_plotly = FALSE)"},{"path":"https://cobriniklab.github.io/seuFLViz/reference/plot_ridge.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Ridges — plot_ridge","title":"Plot Ridges — plot_ridge","text":"Plot ridge plots cell cycle scoring","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/plot_ridge.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Ridges — plot_ridge","text":"","code":"plot_ridge(seu, features)"},{"path":"https://cobriniklab.github.io/seuFLViz/reference/plot_ridge.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Ridges — plot_ridge","text":"features","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/plot_scvelo.html","id":null,"dir":"Reference","previous_headings":"","what":"plot scvelo — plot_scvelo","title":"plot scvelo — plot_scvelo","text":"run scvelo gene transcript level object","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/plot_scvelo.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"plot scvelo — plot_scvelo","text":"","code":"plot_scvelo(   object,   mode = c(\"steady_state\", \"deterministic\", \"stochastic\", \"dynamical\"),   embedding = c(\"UMAP\", \"PCA\", \"TSNE\"),   ... )"},{"path":"https://cobriniklab.github.io/seuFLViz/reference/plot_scvelo.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"plot scvelo — plot_scvelo","text":"object object mode deterministic, stochastic, dynamical embedding UMAP, PCA TSNE ... extra args passed run_scvelo","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/plot_scvelo.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"plot scvelo — plot_scvelo","text":"SingleCellExperiment object velocity calculated","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/plot_scvelo.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"plot scvelo — plot_scvelo","text":"","code":"chevreul_sce <- chevreuldata::human_gene_transcript_sce() plot_scvelo(chevreul_sce, embedding = \"UMAP\", color_by = \"velocity_pseudotime\")"},{"path":"https://cobriniklab.github.io/seuFLViz/reference/plot_transcript_composition.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Transcript Composition — plot_transcript_composition","title":"Plot Transcript Composition — plot_transcript_composition","text":"plot proportion reads given gene map transcript","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/plot_transcript_composition.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Transcript Composition — plot_transcript_composition","text":"","code":"plot_transcript_composition(   seu,   gene_symbol,   group.by = \"batch\",   standardize = FALSE,   drop_zero = FALSE )"},{"path":"https://cobriniklab.github.io/seuFLViz/reference/plot_transcript_composition.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Transcript Composition — plot_transcript_composition","text":"seu seurat object gene_symbol Gene symbol gene intrest group.Name one metadata columns annotate columns (example, orig.ident) drop_zero Drop zero values","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/plot_transcript_composition.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot Transcript Composition — plot_transcript_composition","text":"","code":"plot_transcript_composition(human_gene_transcript_seu, \"RXRG\", group.by = \"gene_snn_res.0.6\")"},{"path":"https://cobriniklab.github.io/seuFLViz/reference/plot_var.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Metadata Variables — plot_var","title":"Plot Metadata Variables — plot_var","text":"Plots static interactive plot point represents cell metadata variable whose position map depends cell embeddings determined reduction technique used","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/plot_var.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Metadata Variables — plot_var","text":"","code":"plot_var(   seu,   group = \"batch\",   embedding = \"umap\",   dims = c(1, 2),   highlight = NULL,   pt.size = 1,   return_plotly = FALSE,   ... )"},{"path":"https://cobriniklab.github.io/seuFLViz/reference/plot_var.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Metadata Variables — plot_var","text":"seu Seurat object group Name one metadata columns group (color) cells . embedding dimensional reduction technique used dims Dimensions plot, must two-length numeric vector highlight list character numeric vectors cells highlight pt.size Adjust point size plot return_plotly Convert plot interactive web-based graph ...","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/plot_var.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot Metadata Variables — plot_var","text":"","code":"# static mode plot_var(human_gene_transcript_seu, group = \"batch\", return_plotly = FALSE)  # interactive plotly plot plotly_plot <- plot_var(human_gene_transcript_seu, group = \"batch\") print(plotly_plot)"},{"path":"https://cobriniklab.github.io/seuFLViz/reference/plot_violin.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Violin plot — plot_violin","title":"Plot Violin plot — plot_violin","text":"Plots Violin plot single data (gene expression, metrics, etc.) grouped metadata variable","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/plot_violin.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Violin plot — plot_violin","text":"","code":"plot_violin(   seu,   plot_var = \"batch\",   plot_vals = NULL,   features = \"RXRG\",   assay = \"gene\",   ... )"},{"path":"https://cobriniklab.github.io/seuFLViz/reference/plot_violin.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Violin plot — plot_violin","text":"seu Seurat object plot_var Variable group (color) cells features Features plot assay Name assay use, defaults active assay ...","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/plot_violin.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot Violin plot — plot_violin","text":"","code":"plot_violin(human_gene_transcript_seu, plot_var = \"batch\", features = c(\"NRL\", \"GNAT2\"))"},{"path":"https://cobriniklab.github.io/seuFLViz/reference/plotly_settings.html","id":null,"dir":"Reference","previous_headings":"","what":"Plotly settings — plotly_settings","title":"Plotly settings — plotly_settings","text":"Change settings plotly plot","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/plotly_settings.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plotly settings — plotly_settings","text":"","code":"plotly_settings(plotly_plot, width = 600, height = 700)"},{"path":"https://cobriniklab.github.io/seuFLViz/reference/plotly_settings.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plotly settings — plotly_settings","text":"plotly_plot plotly plot width Default set '600' height Default set '700'","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/prep_armor_meta.html","id":null,"dir":"Reference","previous_headings":"","what":"prep armor metadata file — prep_armor_meta","title":"prep armor metadata file — prep_armor_meta","text":"prep armor metadata file","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/prep_armor_meta.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"prep armor metadata file — prep_armor_meta","text":"","code":"prep_armor_meta(proj_dir)"},{"path":"https://cobriniklab.github.io/seuFLViz/reference/prep_armor_meta.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"prep armor metadata file — prep_armor_meta","text":"proj_dir","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/prep_plot_genes_in_pseudotime.html","id":null,"dir":"Reference","previous_headings":"","what":"Title — prep_plot_genes_in_pseudotime","title":"Title — prep_plot_genes_in_pseudotime","text":"Title","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/prep_plot_genes_in_pseudotime.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Title — prep_plot_genes_in_pseudotime","text":"","code":"prep_plot_genes_in_pseudotime(cds, mygenes, resolution, partition = FALSE)"},{"path":"https://cobriniklab.github.io/seuFLViz/reference/prep_plot_genes_in_pseudotime.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Title — prep_plot_genes_in_pseudotime","text":"resolution","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/prep_scvelo.html","id":null,"dir":"Reference","previous_headings":"","what":"scvelo_assay — prep_scvelo","title":"scvelo_assay — prep_scvelo","text":"run scvelo gene transcript level seurat object","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/prep_scvelo.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"scvelo_assay — prep_scvelo","text":"","code":"prep_scvelo(   seu,   loom_path,   velocity_mode = c(\"deterministic\", \"stochastic\", \"dynamical\"),   ... )"},{"path":"https://cobriniklab.github.io/seuFLViz/reference/prep_scvelo.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"scvelo_assay — prep_scvelo","text":"seu seurat object loom_path path matching loom file ...  group.metadata color plot plot_method plotting method use scvelo","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/prep_slider_values.html","id":null,"dir":"Reference","previous_headings":"","what":"Prep Slider Values — prep_slider_values","title":"Prep Slider Values — prep_slider_values","text":"Prep Slider Values","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/prep_slider_values.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prep Slider Values — prep_slider_values","text":"","code":"prep_slider_values(default_val)"},{"path":"https://cobriniklab.github.io/seuFLViz/reference/prep_slider_values.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prep Slider Values — prep_slider_values","text":"default_val","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/process_monocle_child.html","id":null,"dir":"Reference","previous_headings":"","what":"Preprocess a Monocle v2 object for heatmap based on provided pseudotime — process_monocle_child","title":"Preprocess a Monocle v2 object for heatmap based on provided pseudotime — process_monocle_child","text":"Preprocess Monocle v2 object heatmap based provided pseudotime","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/process_monocle_child.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Preprocess a Monocle v2 object for heatmap based on provided pseudotime — process_monocle_child","text":"","code":"process_monocle_child(   ptime,   monocle_cds,   trend_formula = \"~sm.ns(Pseudotime, df=3)\" )"},{"path":"https://cobriniklab.github.io/seuFLViz/reference/process_monocle_child.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Preprocess a Monocle v2 object for heatmap based on provided pseudotime — process_monocle_child","text":"monocle_cds","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/propagate_spreadsheet_changes.html","id":null,"dir":"Reference","previous_headings":"","what":"Propagate Metadata Changes — propagate_spreadsheet_changes","title":"Propagate Metadata Changes — propagate_spreadsheet_changes","text":"Propagate Metadata Changes","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/propagate_spreadsheet_changes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Propagate Metadata Changes — propagate_spreadsheet_changes","text":"","code":"propagate_spreadsheet_changes(updated_table, seu)"},{"path":"https://cobriniklab.github.io/seuFLViz/reference/propagate_spreadsheet_changes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Propagate Metadata Changes — propagate_spreadsheet_changes","text":"seu","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/query_experiment.html","id":null,"dir":"Reference","previous_headings":"","what":"Query Assay — query_experiment","title":"Query Assay — query_experiment","text":"Query Assay","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/query_experiment.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Query Assay — query_experiment","text":"","code":"query_experiment(object, experiment)"},{"path":"https://cobriniklab.github.io/seuFLViz/reference/query_experiment.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Query Assay — query_experiment","text":"object SingleCellExperiment object experiment experiment name","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/query_experiment.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Query Assay — query_experiment","text":"logical scalar indicating experiment present object","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/query_experiment.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Query Assay — query_experiment","text":"","code":"chevreul_sce <- chevreuldata::human_gene_transcript_sce() query_experiment(chevreul_sce, \"gene\")"},{"path":"https://cobriniklab.github.io/seuFLViz/reference/read_project_db.html","id":null,"dir":"Reference","previous_headings":"","what":"Read a database of seuFLViz projects — read_project_db","title":"Read a database of seuFLViz projects — read_project_db","text":"Reads database seuFLViz projects data frame","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/read_project_db.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read a database of seuFLViz projects — read_project_db","text":"","code":"read_project_db(   projects_dir = NULL,   cache_location = \"~/.cache/seuFLViz\",   sqlite_db = \"single-cell-projects.db\",   verbose = TRUE )"},{"path":"https://cobriniklab.github.io/seuFLViz/reference/read_project_db.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read a database of seuFLViz projects — read_project_db","text":"projects_dir Project directory containing seuFLViz projects cache_location Path cache \"~/.cache/seuFLViz\" sqlite_db sqlite db verbose","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/record_experiment_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Record Experiment Metadata — record_experiment_data","title":"Record Experiment Metadata — record_experiment_data","text":"Record technical metadata Seurat object","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/record_experiment_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Record Experiment Metadata — record_experiment_data","text":"","code":"record_experiment_data(   object,   experiment_name = \"default_experiment\",   organism = \"human\" )"},{"path":"https://cobriniklab.github.io/seuFLViz/reference/record_experiment_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Record Experiment Metadata — record_experiment_data","text":"object seurat objet experiment_name Name experiment organism Organism","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/record_experiment_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Record Experiment Metadata — record_experiment_data","text":"","code":"logged_seu <- record_experiment_data(human_gene_transcript_seu, experiment_name = \"human_gene_transcript\", organism = \"mouse\") Misc(logged_seu, \"experiment\")"},{"path":"https://cobriniklab.github.io/seuFLViz/reference/reference_integrate.html","id":null,"dir":"Reference","previous_headings":"","what":"Transfer labels between gene or transcript objects — reference_integrate","title":"Transfer labels between gene or transcript objects — reference_integrate","text":"Transfer labels gene transcript objects","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/reference_integrate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Transfer labels between gene or transcript objects — reference_integrate","text":"","code":"reference_integrate(   ref_seu,   query_seu,   query_name = \"fetal\",   ref_name = \"organoid\",   ... )"},{"path":"https://cobriniklab.github.io/seuFLViz/reference/reference_integrate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Transfer labels between gene or transcript objects — reference_integrate","text":"...","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/reformatMetadataDR.html","id":null,"dir":"Reference","previous_headings":"","what":"Reformat Seurat Object Metadata Server — reformatMetadataDR","title":"Reformat Seurat Object Metadata Server — reformatMetadataDR","text":"Reformat Seurat Object Metadata Server","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/reformatMetadataDR.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reformat Seurat Object Metadata Server — reformatMetadataDR","text":"","code":"reformatMetadataDR(   input,   output,   session,   seu,   featureType = \"gene\",   col_bind = NULL,   col_edit = TRUE,   col_options = NULL,   col_stretch = FALSE,   col_names = TRUE,   col_readonly = NULL,   col_factor = FALSE,   row_bind = NULL,   row_edit = TRUE,   save_as = NULL,   title = NULL,   logo = NULL,   logo_size = 30,   logo_side = \"left\",   viewer = \"dialog\",   viewer_height = 800,   viewer_width = 2000,   theme = \"yeti\",   read_fun = \"read.csv\",   read_args = NULL,   write_fun = \"write.csv\",   write_args = NULL,   quiet = FALSE,   code = FALSE,   hide = FALSE )"},{"path":"https://cobriniklab.github.io/seuFLViz/reference/reformatMetadataDR.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reformat Seurat Object Metadata Server — reformatMetadataDR","text":"seu","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/reformatMetadataDRui.html","id":null,"dir":"Reference","previous_headings":"","what":"Reformat Seurat Object Metadata UI — reformatMetadataDRui","title":"Reformat Seurat Object Metadata UI — reformatMetadataDRui","text":"Reformat Seurat Object Metadata UI","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/reformatMetadataDRui.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reformat Seurat Object Metadata UI — reformatMetadataDRui","text":"","code":"reformatMetadataDRui(id)"},{"path":"https://cobriniklab.github.io/seuFLViz/reference/reformatMetadataDRui.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reformat Seurat Object Metadata UI — reformatMetadataDRui","text":"id","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/regress_by_features.html","id":null,"dir":"Reference","previous_headings":"","what":"Regress Seurat Object by Given Set of Genes — regress_by_features","title":"Regress Seurat Object by Given Set of Genes — regress_by_features","text":"Regress Seurat Object Given Set Genes","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/regress_by_features.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Regress Seurat Object by Given Set of Genes — regress_by_features","text":"","code":"regress_by_features(seu, feature_set, set_name, regress = TRUE, ...)"},{"path":"https://cobriniklab.github.io/seuFLViz/reference/regress_by_features.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Regress Seurat Object by Given Set of Genes — regress_by_features","text":"seu seurat object set_name string regress","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/regress_by_features.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Regress Seurat Object by Given Set of Genes — regress_by_features","text":"","code":"regressed_seu <- regress_by_features(panc8, feature_set = cc.genes$s.genes, set_name = \"s_genes\")"},{"path":"https://cobriniklab.github.io/seuFLViz/reference/reintegrate_seu.html","id":null,"dir":"Reference","previous_headings":"","what":"Reintegrate (filtered) seurat objects — reintegrate_seu","title":"Reintegrate (filtered) seurat objects — reintegrate_seu","text":"split batch integrate run integration pipeline save","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/reintegrate_seu.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reintegrate (filtered) seurat objects — reintegrate_seu","text":"","code":"reintegrate_seu(   seu,   feature = \"gene\",   suffix = \"\",   reduction = \"pca\",   algorithm = 1,   ... )"},{"path":"https://cobriniklab.github.io/seuFLViz/reference/reintegrate_seu.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reintegrate (filtered) seurat objects — reintegrate_seu","text":"seu seurat object suffix appended file saved output dir reduction use default pca","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/reintegrate_seu.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Reintegrate (filtered) seurat objects — reintegrate_seu","text":"","code":"panc8$batch <- panc8$gene$tech reintegrate_seu(panc8)"},{"path":"https://cobriniklab.github.io/seuFLViz/reference/rename_from_x_notation.html","id":null,"dir":"Reference","previous_headings":"","what":"Rename cell ids from annoying old notation — rename_from_x_notation","title":"Rename cell ids from annoying old notation — rename_from_x_notation","text":"Rename cell ids annoying old notation","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/rename_from_x_notation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Rename cell ids from annoying old notation — rename_from_x_notation","text":"","code":"rename_from_x_notation(cell_ids, batch_id)"},{"path":"https://cobriniklab.github.io/seuFLViz/reference/rename_from_x_notation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Rename cell ids from annoying old notation — rename_from_x_notation","text":"batch_id","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/rename_seurat.html","id":null,"dir":"Reference","previous_headings":"","what":"Give a new project name to a seurat object — rename_seurat","title":"Give a new project name to a seurat object — rename_seurat","text":"Function assign new project name Seurat object","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/rename_seurat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Give a new project name to a seurat object — rename_seurat","text":"","code":"rename_seurat(seu, new_name)"},{"path":"https://cobriniklab.github.io/seuFLViz/reference/rename_seurat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Give a new project name to a seurat object — rename_seurat","text":"seu Seurat object new_name New name assign","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/reorg_seurat_files.html","id":null,"dir":"Reference","previous_headings":"","what":"Reorganize seurat objects to a multimodal format — reorg_seurat_files","title":"Reorganize seurat objects to a multimodal format — reorg_seurat_files","text":"Reorganize seurat objects multimodal format","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/reorg_seurat_files.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reorganize seurat objects to a multimodal format — reorg_seurat_files","text":"","code":"reorg_seurat_files(   projects_db = \"~/.cache/seuFLViz/single-cell-projects.db\" )"},{"path":"https://cobriniklab.github.io/seuFLViz/reference/reorg_seurat_files.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reorganize seurat objects to a multimodal format — reorg_seurat_files","text":"proj_dir","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/reset_seu_meta.html","id":null,"dir":"Reference","previous_headings":"","what":"Reset Seurat Metadata — reset_seu_meta","title":"Reset Seurat Metadata — reset_seu_meta","text":"Reset Seurat Metadata","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/reset_seu_meta.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reset Seurat Metadata — reset_seu_meta","text":"","code":"reset_seu_meta(seu, new_meta)"},{"path":"https://cobriniklab.github.io/seuFLViz/reference/reset_seu_meta.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reset Seurat Metadata — reset_seu_meta","text":"seu seurat object new_meta new object","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/run_BEAM.html","id":null,"dir":"Reference","previous_headings":"","what":"Run BEAM from Monocle2 — run_BEAM","title":"Run BEAM from Monocle2 — run_BEAM","text":"http://cole-trapnell-lab.github.io/monocle-release/docs/#differential-expression-analysis","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/run_BEAM.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run BEAM from Monocle2 — run_BEAM","text":"","code":"run_BEAM(   HSMM,   branch_point,   branches,   pt_param,   pt_paramval,   colorval,   top_genes )"},{"path":"https://cobriniklab.github.io/seuFLViz/reference/run_BEAM.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run BEAM from Monocle2 — run_BEAM","text":"top_genes","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/run_census.html","id":null,"dir":"Reference","previous_headings":"","what":"Run Census — run_census","title":"Run Census — run_census","text":"Run Census","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/run_census.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run Census — run_census","text":"","code":"run_census(sce, census_output_file)"},{"path":"https://cobriniklab.github.io/seuFLViz/reference/run_census.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run Census — run_census","text":"sce single cell experiment object census_output_file name given output file","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/run_enrichmentbrowser.html","id":null,"dir":"Reference","previous_headings":"","what":"Run Enrichment Browser on Differentially Expressed Genes — run_enrichmentbrowser","title":"Run Enrichment Browser on Differentially Expressed Genes — run_enrichmentbrowser","text":"Run Enrichment Browser Differentially Expressed Genes","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/run_enrichmentbrowser.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run Enrichment Browser on Differentially Expressed Genes — run_enrichmentbrowser","text":"","code":"run_enrichmentbrowser(   seu,   cluster_list,   de_results,   enrichment_method = c(\"ora\"),   ... )"},{"path":"https://cobriniklab.github.io/seuFLViz/reference/run_enrichmentbrowser.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run Enrichment Browser on Differentially Expressed Genes — run_enrichmentbrowser","text":"de_results","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/run_hmap.html","id":null,"dir":"Reference","previous_headings":"","what":"Run heatmap from Monocle2 — run_hmap","title":"Run heatmap from Monocle2 — run_hmap","text":"http://cole-trapnell-lab.github.io/monocle-release/docs/#differential-expression-analysis","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/run_hmap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run heatmap from Monocle2 — run_hmap","text":"","code":"run_hmap(   HSMM,   BEAM_res,   branches,   pt_param,   pt_paramval,   colorval,   top_genes,   out_pdf )"},{"path":"https://cobriniklab.github.io/seuFLViz/reference/run_hmap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run heatmap from Monocle2 — run_hmap","text":"out_pdf","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/run_scvelo.html","id":null,"dir":"Reference","previous_headings":"","what":"scvelo_assay — run_scvelo","title":"scvelo_assay — run_scvelo","text":"run scvelo gene transcript level seurat object","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/run_scvelo.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"scvelo_assay — run_scvelo","text":"","code":"run_scvelo(   seu,   loom_path,   assay = \"gene\",   fit.quantile = 0.05,   check_loom = FALSE,   ... )"},{"path":"https://cobriniklab.github.io/seuFLViz/reference/run_scvelo.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"scvelo_assay — run_scvelo","text":"seu seurat object loom_path path matching loom file ...","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/run_seurat_de.html","id":null,"dir":"Reference","previous_headings":"","what":"Run Seurat Differential Expression — run_seurat_de","title":"Run Seurat Differential Expression — run_seurat_de","text":"Run Seurat Differential Expression","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/run_seurat_de.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run Seurat Differential Expression — run_seurat_de","text":"","code":"run_seurat_de(   seu,   cluster1,   cluster2,   resolution,   diffex_scheme = \"louvain\",   featureType,   tests = c(\"t\", \"wilcox\", \"bimod\") )"},{"path":"https://cobriniklab.github.io/seuFLViz/reference/run_seurat_de.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run Seurat Differential Expression — run_seurat_de","text":"diffex_scheme","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/save_seurat.html","id":null,"dir":"Reference","previous_headings":"","what":"Save seurat object to /output/sce/_seu.rds — save_seurat","title":"Save seurat object to /output/sce/_seu.rds — save_seurat","text":"Save seurat object /output/sce/_seu.rds","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/save_seurat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Save seurat object to /output/sce/_seu.rds — save_seurat","text":"","code":"save_seurat(seu, prefix = \"unfiltered\", proj_dir = getwd())"},{"path":"https://cobriniklab.github.io/seuFLViz/reference/save_seurat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Save seurat object to /output/sce/_seu.rds — save_seurat","text":"proj_dir  ... named arguments specifying seurat objects list seurat objects; default \"gene\" \"transcript\"","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/save_seurat.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Save seurat object to /output/sce/_seu.rds — save_seurat","text":"","code":"if (FALSE) { save_seurat(gene = feature_seus$gene, transcript = feature_seus$transcript, proj_dir = proj_dir)  save_seurat(gene = feature_seus$gene, transcript = feature_seus$transcript, prefix = \"remove_nonPRs\", proj_dir = proj_dir) }"},{"path":"https://cobriniklab.github.io/seuFLViz/reference/sce_from_tibbles.html","id":null,"dir":"Reference","previous_headings":"","what":"Create Single Cell Experiment from Tibbles — sce_from_tibbles","title":"Create Single Cell Experiment from Tibbles — sce_from_tibbles","text":"Create Single Cell Experiment Tibbles","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/sce_from_tibbles.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create Single Cell Experiment from Tibbles — sce_from_tibbles","text":"","code":"sce_from_tibbles(counts, colData, experimentdata = NULL)"},{"path":"https://cobriniklab.github.io/seuFLViz/reference/sce_from_tibbles.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create Single Cell Experiment from Tibbles — sce_from_tibbles","text":"experimentdata","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/scvelo_expression.html","id":null,"dir":"Reference","previous_headings":"","what":"plot  scvelo expression — scvelo_expression","title":"plot  scvelo expression — scvelo_expression","text":"run scvelo gene transcript level object","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/scvelo_expression.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"plot  scvelo expression — scvelo_expression","text":"","code":"scvelo_expression(   object,   mode = c(\"steady_state\", \"deterministic\", \"stochastic\", \"dynamical\"),   embedding = c(\"UMAP\", \"PCA\", \"TSNE\"),   ... )"},{"path":"https://cobriniklab.github.io/seuFLViz/reference/scvelo_expression.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"plot  scvelo expression — scvelo_expression","text":"object object mode deterministic, stochastic, dynamical embedding UMAP, PCA TSNE ... extra args passed run_scvelo","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/scvelo_expression.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"plot  scvelo expression — scvelo_expression","text":"SingleCellExperiment object velocity calculated","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/scvelo_expression.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"plot  scvelo expression — scvelo_expression","text":"","code":"chevreul_sce <- chevreuldata::human_gene_transcript_sce() scvelo_expression(chevreul_sce, embedding = \"UMAP\", color_by = \"velocity_pseudotime\")"},{"path":"https://cobriniklab.github.io/seuFLViz/reference/set_colnames_txi.html","id":null,"dir":"Reference","previous_headings":"","what":"Set Column Names from tximport — set_colnames_txi","title":"Set Column Names from tximport — set_colnames_txi","text":"Set Column Names tximport","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/set_colnames_txi.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set Column Names from tximport — set_colnames_txi","text":"","code":"set_colnames_txi(txi, colnames)"},{"path":"https://cobriniklab.github.io/seuFLViz/reference/set_colnames_txi.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set Column Names from tximport — set_colnames_txi","text":"colnames","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/seu_calcn.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate Read Count Metrics for a Seurat object — seu_calcn","title":"Calculate Read Count Metrics for a Seurat object — seu_calcn","text":"Recalculate counts/features per cell seurat object","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/seu_calcn.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate Read Count Metrics for a Seurat object — seu_calcn","text":"","code":"seu_calcn(seu, assay = \"gene\", slot = \"counts\")"},{"path":"https://cobriniklab.github.io/seuFLViz/reference/seu_calcn.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate Read Count Metrics for a Seurat object — seu_calcn","text":"seu seurat object assay Assay use, Default = \"gene\" slot","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/seu_complex_heatmap.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Annotated Complexheatmap from Seurat object — seu_complex_heatmap","title":"Plot Annotated Complexheatmap from Seurat object — seu_complex_heatmap","text":"Plot Annotated Complexheatmap Seurat object","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/seu_complex_heatmap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Annotated Complexheatmap from Seurat object — seu_complex_heatmap","text":"","code":"seu_complex_heatmap(   seu,   features = NULL,   group.by = \"ident\",   cells = NULL,   layer = \"scale.data\",   assay = NULL,   group.bar.height = 0.01,   column_split = NULL,   col_arrangement = \"ward.D2\",   mm_col_dend = 30,   embedding = \"pca\",   ... )"},{"path":"https://cobriniklab.github.io/seuFLViz/reference/seu_complex_heatmap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Annotated Complexheatmap from Seurat object — seu_complex_heatmap","text":"features Vector features plot. Features can come group.Name one metadata columns annotate columns (example, orig.ident) cells Cells retain column_split whether split columns metadat value col_arrangement arrange columns whether dendrogram (Ward.D2, average, etc.) exclusively metadata category mm_col_dend height column dendrogram ... additional arguments passed ComplexHeatmap::Heatmap object Seurat object emedding column dendrogram","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/seu_complex_heatmap.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot Annotated Complexheatmap from Seurat object — seu_complex_heatmap","text":"","code":"# plot top 50 variable genes top_50_features <- VariableFeatures(human_gene_transcript_seu)[1:50] seu_complex_heatmap(human_gene_transcript_seu, features = top_50_features)"},{"path":"https://cobriniklab.github.io/seuFLViz/reference/seu_from_tibbles.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a Seurat Object from a set of tibbles — seu_from_tibbles","title":"Create a Seurat Object from a set of tibbles — seu_from_tibbles","text":"Create Seurat Object set tibbles","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/seu_from_tibbles.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a Seurat Object from a set of tibbles — seu_from_tibbles","text":"","code":"seu_from_tibbles(exp_tbl, feature, meta_tbl, ...)"},{"path":"https://cobriniklab.github.io/seuFLViz/reference/seu_from_tibbles.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a Seurat Object from a set of tibbles — seu_from_tibbles","text":"...","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/seu_from_tximport.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a seurat object from output of  tximport and a table of cell metadata — seu_from_tximport","title":"Create a seurat object from output of  tximport and a table of cell metadata — seu_from_tximport","text":"Create seurat object output  tximport table cell metadata","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/seu_from_tximport.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a seurat object from output of  tximport and a table of cell metadata — seu_from_tximport","text":"","code":"seu_from_tximport(txi, meta_tbl, ...)"},{"path":"https://cobriniklab.github.io/seuFLViz/reference/seu_from_tximport.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a seurat object from output of  tximport and a table of cell metadata — seu_from_tximport","text":"txi output load_counts_by_tximport meta_tbl tibble cell metadata cell ids first column ...  feature feature level summarize counts gene transcript","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/seuratApp.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a shiny app for a project on disk — seuratApp","title":"Create a shiny app for a project on disk — seuratApp","text":"Create shiny app project disk","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/seuratApp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a shiny app for a project on disk — seuratApp","text":"","code":"seuratApp(   preset_project,   appTitle = \"seuFLViz\",   organism_type = \"human\",   bigwig_db = \"~/.cache/seuFLViz/bw-files.db\",   db_path = \"~/.cache/seuFLViz/single-cell-projects.db\",   futureMb = 13000 )"},{"path":"https://cobriniklab.github.io/seuFLViz/reference/seuratApp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a shiny app for a project on disk — seuratApp","text":"preset_project preloaded project start app appTitle title App organism_type  futureMb amount Mb allocated future package","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/seuFLViz-package.html","id":null,"dir":"Reference","previous_headings":"","what":"seuFLViz: Tools for Managing Seurat Objects — seuFLViz-package","title":"seuFLViz: Tools for Managing Seurat Objects — seuFLViz-package","text":"Tools using seurat single cell projects","code":""},{"path":[]},{"path":"https://cobriniklab.github.io/seuFLViz/reference/seuFLViz-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"seuFLViz: Tools for Managing Seurat Objects — seuFLViz-package","text":"Maintainer: Kevin Stachelek kevin.stachelek@gmail.com (ORCID) Authors: Bhavana Bhat bhavanabhat29@gmail.com contributors: Roman Hillje (Author included Cerebro fragments) [contributor]","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/seuFLVizBox.html","id":null,"dir":"Reference","previous_headings":"","what":"custom collapsible box — seuFLVizBox","title":"custom collapsible box — seuFLVizBox","text":"custom collapsible box","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/seuFLVizBox.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"custom collapsible box — seuFLVizBox","text":"","code":"seuFLVizBox(title = \"\", ...)"},{"path":"https://cobriniklab.github.io/seuFLViz/reference/seuFLVizBox.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"custom collapsible box — seuFLVizBox","text":"title","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/seurat_cluster.html","id":null,"dir":"Reference","previous_headings":"","what":"Run Louvain Clustering at Multiple Resolutions — seurat_cluster","title":"Run Louvain Clustering at Multiple Resolutions — seurat_cluster","text":"Run Louvain Clustering Multiple Resolutions","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/seurat_cluster.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run Louvain Clustering at Multiple Resolutions — seurat_cluster","text":"","code":"seurat_cluster(   seu = seu,   resolution = 0.6,   custom_clust = NULL,   reduction = \"pca\",   algorithm = 1,   ... )"},{"path":"https://cobriniklab.github.io/seuFLViz/reference/seurat_cluster.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run Louvain Clustering at Multiple Resolutions — seurat_cluster","text":"seu seurat object resolution Clustering resolution reduction Set dimensional reduction object ...","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/seurat_find_markers.html","id":null,"dir":"Reference","previous_headings":"","what":"Find Cell Type Markers in a Seurat Object — seurat_find_markers","title":"Find Cell Type Markers in a Seurat Object — seurat_find_markers","text":"Find Cell Type Markers Seurat Object","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/seurat_find_markers.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find Cell Type Markers in a Seurat Object — seurat_find_markers","text":"","code":"seurat_find_markers(seu, num_features)"},{"path":"https://cobriniklab.github.io/seuFLViz/reference/seurat_find_markers.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find Cell Type Markers in a Seurat Object — seurat_find_markers","text":"seu seurat object","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/seurat_integrate.html","id":null,"dir":"Reference","previous_headings":"","what":"Batch Correct Multiple Seurat Objects — seurat_integrate","title":"Batch Correct Multiple Seurat Objects — seurat_integrate","text":"Batch Correct Multiple Seurat Objects","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/seurat_integrate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Batch Correct Multiple Seurat Objects — seurat_integrate","text":"","code":"seurat_integrate(seu_list, method = \"cca\", organism = \"human\", ...)"},{"path":"https://cobriniklab.github.io/seuFLViz/reference/seurat_integrate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Batch Correct Multiple Seurat Objects — seurat_integrate","text":"seu_list List two seurat objects method Default \"cca\" ...","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/seurat_integration_pipeline.html","id":null,"dir":"Reference","previous_headings":"","what":"Run Seurat Integration — seurat_integration_pipeline","title":"Run Seurat Integration — seurat_integration_pipeline","text":"Run batch correction, followed : stashing batches metadata 'batch' clustering resolution 0.2 2.0 increments 0.2 saving <proj_dir>/output/sce/seu.rds","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/seurat_integration_pipeline.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run Seurat Integration — seurat_integration_pipeline","text":"","code":"seurat_integration_pipeline(   seu_list,   resolution = seq(0.2, 2, by = 0.2),   suffix = \"\",   algorithm = 1,   organism = \"human\",   annotate_cell_cycle = FALSE,   annotate_percent_mito = FALSE,   reduction = \"pca\",   ... )"},{"path":"https://cobriniklab.github.io/seuFLViz/reference/seurat_integration_pipeline.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run Seurat Integration — seurat_integration_pipeline","text":"seu_list List seurat objects integrated resolution Range resolution suffix suffix appended file save output dir algorithm Algorithm modularity optimization. Default 1:original Louvain algorithm organism Default \"human\" ...","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/seurat_integration_pipeline.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Run Seurat Integration — seurat_integration_pipeline","text":"","code":"batches <- panc8 %>%     Seurat::SplitObject(split.by = \"tech\")  integrated_seu <- seurat_integration_pipeline(batches)"},{"path":"https://cobriniklab.github.io/seuFLViz/reference/seurat_pipeline.html","id":null,"dir":"Reference","previous_headings":"","what":"Run Seurat Pipeline — seurat_pipeline","title":"Run Seurat Pipeline — seurat_pipeline","text":"functions allows Preprocess, Cluster Reduce Dimensions single seurat object.","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/seurat_pipeline.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run Seurat Pipeline — seurat_pipeline","text":"","code":"seurat_pipeline(   seu,   assay = \"gene\",   resolution = 0.6,   reduction = \"pca\",   organism = \"human\",   ... )"},{"path":"https://cobriniklab.github.io/seuFLViz/reference/seurat_pipeline.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run Seurat Pipeline — seurat_pipeline","text":"seu Seurat object assay Assay interest Seurat object resolution Resolution clustering cells. Default set 0.6. reduction Dimensional reduction object seu organism Organism ... Extra parameters passed seurat_pipeline","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/seurat_pipeline.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Run Seurat Pipeline — seurat_pipeline","text":"","code":"processed_seu <- seurat_pipeline(panc8)"},{"path":"https://cobriniklab.github.io/seuFLViz/reference/seurat_preprocess.html","id":null,"dir":"Reference","previous_headings":"","what":"Preprocess Seurat Object — seurat_preprocess","title":"Preprocess Seurat Object — seurat_preprocess","text":"Performs standard pre-processing workflow scRNA-seq data","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/seurat_preprocess.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Preprocess Seurat Object — seurat_preprocess","text":"","code":"seurat_preprocess(   assay,   scale = TRUE,   normalize = TRUE,   features = NULL,   legacy_settings = FALSE,   ... )"},{"path":"https://cobriniklab.github.io/seuFLViz/reference/seurat_preprocess.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Preprocess Seurat Object — seurat_preprocess","text":"assay Assay use scale Perform linear transformation 'Scaling' normalize Perform normalization features Identify highly variable features legacy_settings Use legacy settings ...","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/seurat_preprocess.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Preprocess Seurat Object — seurat_preprocess","text":"","code":"panc8[[\"gene\"]] <- seurat_preprocess(panc8[[\"gene\"]])"},{"path":"https://cobriniklab.github.io/seuFLViz/reference/seurat_reduce_dimensions.html","id":null,"dir":"Reference","previous_headings":"","what":"Dimensional Reduction — seurat_reduce_dimensions","title":"Dimensional Reduction — seurat_reduce_dimensions","text":"Run PCA, TSNE UMAP seurat object perplexity bigger 3 * perplexity < nrow(X) - 1, see details interpretation","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/seurat_reduce_dimensions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Dimensional Reduction — seurat_reduce_dimensions","text":"","code":"seurat_reduce_dimensions(   seu,   assay = \"gene\",   reduction = \"pca\",   legacy_settings = FALSE,   ... )"},{"path":"https://cobriniklab.github.io/seuFLViz/reference/seurat_reduce_dimensions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Dimensional Reduction — seurat_reduce_dimensions","text":"seu Seurat object assay Assay interest run seurat object reduction Set dimensional reduction object legacy_settings Use legacy settings ... Extra parameters passed seurat_reduce_dimensions","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/seurat_v5_integrate.html","id":null,"dir":"Reference","previous_headings":"","what":"Batch Correct Multiple Seurat Objects — seurat_v5_integrate","title":"Batch Correct Multiple Seurat Objects — seurat_v5_integrate","text":"Batch Correct Multiple Seurat Objects","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/seurat_v5_integrate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Batch Correct Multiple Seurat Objects — seurat_v5_integrate","text":"","code":"seurat_v5_integrate(seu, method = \"cca\", organism = \"human\", ...)"},{"path":"https://cobriniklab.github.io/seuFLViz/reference/seurat_v5_integrate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Batch Correct Multiple Seurat Objects — seurat_v5_integrate","text":"method Default \"cca\" ...  seu_list List two seurat objects","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/seurat_v5_integration_pipeline.html","id":null,"dir":"Reference","previous_headings":"","what":"Run Seurat Integration — seurat_v5_integration_pipeline","title":"Run Seurat Integration — seurat_v5_integration_pipeline","text":"Run batch correction, followed : stashing batches metadata 'batch' clustering resolution 0.2 2.0 increments 0.2 saving <proj_dir>/output/sce/seu.rds","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/seurat_v5_integration_pipeline.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run Seurat Integration — seurat_v5_integration_pipeline","text":"","code":"seurat_v5_integration_pipeline(   seu,   resolution = seq(0.2, 2, by = 0.2),   suffix = \"\",   algorithm = 1,   organism = \"human\",   annotate_cell_cycle = FALSE,   annotate_percent_mito = FALSE,   reduction = \"pca\",   ... )"},{"path":"https://cobriniklab.github.io/seuFLViz/reference/seurat_v5_integration_pipeline.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run Seurat Integration — seurat_v5_integration_pipeline","text":"resolution Range resolution suffix suffix appended file save output dir algorithm Algorithm modularity optimization. Default 1:original Louvain algorithm organism Default \"human\" ...  seu_list List seurat objects integrated","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/seurat_v5_integration_pipeline.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Run Seurat Integration — seurat_v5_integration_pipeline","text":"","code":"batches <- panc8 %>%     Seurat::SplitObject(split.by = \"tech\")  integrated_seu <- seurat_integration_pipeline(batches)"},{"path":"https://cobriniklab.github.io/seuFLViz/reference/stash_marker_features.html","id":null,"dir":"Reference","previous_headings":"","what":"Stash Marker Genes in a Seurat Object — stash_marker_features","title":"Stash Marker Genes in a Seurat Object — stash_marker_features","text":"Marker Genes stored slot @misc$markers","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/stash_marker_features.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Stash Marker Genes in a Seurat Object — stash_marker_features","text":"","code":"stash_marker_features(   metavar,   seu,   seurat_assay,   top_n = 200,   p_val_cutoff = 0.5 )"},{"path":"https://cobriniklab.github.io/seuFLViz/reference/stash_marker_features.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Stash Marker Genes in a Seurat Object — stash_marker_features","text":"metavar metadata variable group seu seurat object seurat_assay assay use top_n Use top n genes, Default \"200\" p_val_cutoff p value cut-, Default value \"0.5\"","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/stash_marker_features.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Stash Marker Genes in a Seurat Object — stash_marker_features","text":"","code":"seu <- stash_marker_features(metavar = \"batch\", seu, seurat_assay = \"gene\")"},{"path":"https://cobriniklab.github.io/seuFLViz/reference/subset_by_meta.html","id":null,"dir":"Reference","previous_headings":"","what":"Subset by new metadata — subset_by_meta","title":"Subset by new metadata — subset_by_meta","text":"Subset seurat object using new metadata","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/subset_by_meta.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Subset by new metadata — subset_by_meta","text":"","code":"subset_by_meta(meta_path, seu)"},{"path":"https://cobriniklab.github.io/seuFLViz/reference/subset_by_meta.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Subset by new metadata — subset_by_meta","text":"meta_path Path new metadata seu seurat obejct","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/swap_counts_from_feature.html","id":null,"dir":"Reference","previous_headings":"","what":"Swap counts from Feature — swap_counts_from_feature","title":"Swap counts from Feature — swap_counts_from_feature","text":"Swap counts Feature","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/swap_counts_from_feature.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Swap counts from Feature — swap_counts_from_feature","text":"","code":"swap_counts_from_feature(cds, featureType)"},{"path":"https://cobriniklab.github.io/seuFLViz/reference/swap_counts_from_feature.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Swap counts from Feature — swap_counts_from_feature","text":"featureType","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/tableSelected.html","id":null,"dir":"Reference","previous_headings":"","what":"Create Table of Selected Cells — tableSelected","title":"Create Table of Selected Cells — tableSelected","text":"Create Table Selected Cells","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/tableSelected.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create Table of Selected Cells — tableSelected","text":"","code":"tableSelected(input, output, session, seu)"},{"path":"https://cobriniklab.github.io/seuFLViz/reference/tableSelected.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create Table of Selected Cells — tableSelected","text":"seu","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/tableSelectedui.html","id":null,"dir":"Reference","previous_headings":"","what":"Create Table of Selected Cells UI — tableSelectedui","title":"Create Table of Selected Cells UI — tableSelectedui","text":"Create Table Selected Cells UI","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/tableSelectedui.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create Table of Selected Cells UI — tableSelectedui","text":"","code":"tableSelectedui(id)"},{"path":"https://cobriniklab.github.io/seuFLViz/reference/tableSelectedui.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create Table of Selected Cells UI — tableSelectedui","text":"id","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/techInfo.html","id":null,"dir":"Reference","previous_headings":"","what":"Title — techInfo","title":"Title — techInfo","text":"Title","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/techInfo.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Title — techInfo","text":"","code":"techInfo(input, output, session, seu)"},{"path":"https://cobriniklab.github.io/seuFLViz/reference/techInfo.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Title — techInfo","text":"seu","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/techInfoui.html","id":null,"dir":"Reference","previous_headings":"","what":"Title — techInfoui","title":"Title — techInfoui","text":"Title","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/techInfoui.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Title — techInfoui","text":"","code":"techInfoui(id)"},{"path":"https://cobriniklab.github.io/seuFLViz/reference/techInfoui.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Title — techInfoui","text":"id","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/threshold_monocle_genes.html","id":null,"dir":"Reference","previous_headings":"","what":"Threshold monocle genes — threshold_monocle_genes","title":"Threshold monocle genes — threshold_monocle_genes","text":"Threshold monocle genes","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/threshold_monocle_genes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Threshold monocle genes — threshold_monocle_genes","text":"","code":"threshold_monocle_genes(seu, cds, min_expression = 0.05)"},{"path":"https://cobriniklab.github.io/seuFLViz/reference/threshold_monocle_genes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Threshold monocle genes — threshold_monocle_genes","text":"min_expression","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/transcripts_to_genes.html","id":null,"dir":"Reference","previous_headings":"","what":"Ensembl Transcript Ids to Gene Symbols — transcripts_to_genes","title":"Ensembl Transcript Ids to Gene Symbols — transcripts_to_genes","text":"convert ensembl transcript ids hgnc gene symbols","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/transcripts_to_genes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Ensembl Transcript Ids to Gene Symbols — transcripts_to_genes","text":"","code":"transcripts_to_genes(transcripts, organism = \"human\")"},{"path":"https://cobriniklab.github.io/seuFLViz/reference/transcripts_to_genes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Ensembl Transcript Ids to Gene Symbols — transcripts_to_genes","text":"transcripts","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/transcripts_to_genes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Ensembl Transcript Ids to Gene Symbols — transcripts_to_genes","text":"","code":"RXRG_transcripts_hs <- c(\"ENST00000359842\", \"ENST00000470566\", \"ENST00000465764\", \"ENST00000619224\")  transcripts_to_genes(transcripts = RXRG_transcripts_hs)"},{"path":"https://cobriniklab.github.io/seuFLViz/reference/unite_metadata.html","id":null,"dir":"Reference","previous_headings":"","what":"Unite metadata — unite_metadata","title":"Unite metadata — unite_metadata","text":"Unite metadata","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/unite_metadata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Unite metadata — unite_metadata","text":"","code":"unite_metadata(seu, metavars)"},{"path":"https://cobriniklab.github.io/seuFLViz/reference/unite_metadata.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Unite metadata — unite_metadata","text":"seu seurat object metavars feature variable combine","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/update_chevreul_object.html","id":null,"dir":"Reference","previous_headings":"","what":"Update a seuFLViz Object — update_seuFLViz_object","title":"Update a seuFLViz Object — update_seuFLViz_object","text":"Update seuFLViz Object","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/update_chevreul_object.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Update a seuFLViz Object — update_seuFLViz_object","text":"","code":"update_seuFLViz_object(   seu_path,   feature,   resolution = seq(0.2, 2, by = 0.2),   return_seu = TRUE,   ... )"},{"path":"https://cobriniklab.github.io/seuFLViz/reference/update_chevreul_object.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Update a seuFLViz Object — update_seuFLViz_object","text":"...","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/update_exp_meta.html","id":null,"dir":"Reference","previous_headings":"","what":"Update experiment Metadata — update_exp_meta","title":"Update experiment Metadata — update_exp_meta","text":"Update experiment Metadata","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/update_exp_meta.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Update experiment Metadata — update_exp_meta","text":"","code":"update_exp_meta(original_meta, corrected_meta)"},{"path":"https://cobriniklab.github.io/seuFLViz/reference/update_exp_meta.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Update experiment Metadata — update_exp_meta","text":"corrected_meta","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/update_human_gene_symbols.html","id":null,"dir":"Reference","previous_headings":"","what":"Update human gene symbols in seurat object — update_human_gene_symbols","title":"Update human gene symbols in seurat object — update_human_gene_symbols","text":"Update human gene symbols seurat object","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/update_human_gene_symbols.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Update human gene symbols in seurat object — update_human_gene_symbols","text":"","code":"update_human_gene_symbols(seu, assay = \"gene\")"},{"path":"https://cobriniklab.github.io/seuFLViz/reference/update_human_gene_symbols.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Update human gene symbols in seurat object — update_human_gene_symbols","text":"seu Seurat object assay Assay use, Default = \"gene\"","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/update_project_db.html","id":null,"dir":"Reference","previous_headings":"","what":"Update a database of seuFLViz projects — update_project_db","title":"Update a database of seuFLViz projects — update_project_db","text":"Add new/update existing projects database recursing fully","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/update_project_db.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Update a database of seuFLViz projects — update_project_db","text":"","code":"update_project_db(   projects_dir = NULL,   cache_location = \"~/.cache/seuFLViz\",   sqlite_db = \"single-cell-projects.db\",   verbose = TRUE )"},{"path":"https://cobriniklab.github.io/seuFLViz/reference/update_project_db.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Update a database of seuFLViz projects — update_project_db","text":"projects_dir project directory updated cache_location Path cache \"~/.cache/seuFLViz\" sqlite_db sqlite db verbose","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/update_seu_meta.html","id":null,"dir":"Reference","previous_headings":"","what":"Update Seurat Metadata from Project — update_seu_meta","title":"Update Seurat Metadata from Project — update_seu_meta","text":"Given project metadata file located <proj_dir>/data/<meta_file>, update existing seurat object project data","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/update_seu_meta.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Update Seurat Metadata from Project — update_seu_meta","text":"","code":"update_seu_meta(seu, proj_dir, numcols)"},{"path":"https://cobriniklab.github.io/seuFLViz/reference/update_seu_meta.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Update Seurat Metadata from Project — update_seu_meta","text":"seu seurat object proj_dir Project directory numcols","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/update_seuFLViz_object.html","id":null,"dir":"Reference","previous_headings":"","what":"Update a seuFLViz Object — update_seuFLViz_object","title":"Update a seuFLViz Object — update_seuFLViz_object","text":"Update seuFLViz Object","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/update_seuFLViz_object.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Update a seuFLViz Object — update_seuFLViz_object","text":"","code":"update_seuFLViz_object(   seu_path,   feature,   resolution = seq(0.2, 2, by = 0.2),   return_seu = TRUE,   ... )"},{"path":"https://cobriniklab.github.io/seuFLViz/reference/update_seuFLViz_object.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Update a seuFLViz Object — update_seuFLViz_object","text":"seu_path Path seurat object ...","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/velocyto_assay.html","id":null,"dir":"Reference","previous_headings":"","what":"run velocyto on a gene or transcript level seurat object — velocyto_assay","title":"run velocyto on a gene or transcript level seurat object — velocyto_assay","text":"run velocyto gene transcript level seurat object","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/velocyto_assay.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"run velocyto on a gene or transcript level seurat object — velocyto_assay","text":"","code":"velocyto_assay(seu, loom_path, fit.quantile = 0.05, check_loom = FALSE, ...)"},{"path":"https://cobriniklab.github.io/seuFLViz/reference/velocyto_assay.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"run velocyto on a gene or transcript level seurat object — velocyto_assay","text":"seu seurat object loom_path path matching loom file ...","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/velocyto_seu.html","id":null,"dir":"Reference","previous_headings":"","what":"run velocyto on a seurat object — velocyto_seu","title":"run velocyto on a seurat object — velocyto_seu","text":"run velocyto seurat object","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/velocyto_seu.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"run velocyto on a seurat object — velocyto_seu","text":"","code":"velocyto_seu(seu, loom_path, fit.quantile = 0.05, ...)"},{"path":"https://cobriniklab.github.io/seuFLViz/reference/velocyto_seu.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"run velocyto on a seurat object — velocyto_seu","text":"...","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/velocyto_seurat_from_loom.html","id":null,"dir":"Reference","previous_headings":"","what":"Run RNA Velocity starting with only a loom File — velocyto_seurat_from_loom","title":"Run RNA Velocity starting with only a loom File — velocyto_seurat_from_loom","text":"Run RNA Velocity starting loom File","code":""},{"path":"https://cobriniklab.github.io/seuFLViz/reference/velocyto_seurat_from_loom.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run RNA Velocity starting with only a loom File — velocyto_seurat_from_loom","text":"","code":"velocyto_seurat_from_loom(loom_path)"},{"path":"https://cobriniklab.github.io/seuFLViz/reference/velocyto_seurat_from_loom.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run RNA Velocity starting with only a loom File — velocyto_seurat_from_loom","text":"loom_path","code":""}]
